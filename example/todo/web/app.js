// Generated by Haxe 3.4.7
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
IntIterator.__name__ = true;
IntIterator.prototype = {
	__class__: IntIterator
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var Webpack = function() { };
Webpack.__name__ = true;
var apollo_gql_Tag = function() { };
apollo_gql_Tag.__name__ = true;
apollo_gql_Tag.gql = function(graphql1) {
	var parser = new graphql_parser_Parser(graphql1,{ noLocation : true});
	return { kind : "Document", definitions : parser.document.definitions};
};
var aws_appsync_AWSAppSyncClient = require("aws-appsync").AWSAppSyncClient;
var AmazonCognitoIdentity_AuthenticationDetails = require("amazon-cognito-identity-js").AuthenticationDetails;
var AmazonCognitoIdentity_CognitoUser = require("amazon-cognito-identity-js").CognitoUser;
var AmazonCognitoIdentity_CognitoUserPool = require("amazon-cognito-identity-js").CognitoUserPool;
var graphql_ASTDefs = function() { };
graphql_ASTDefs.__name__ = true;
var graphql_parser_GeneratedLexer = function(opts) {
	this.lineStart = 0;
	this.line = 1;
	this.options = opts;
	this.advance = $bind(this,this.advanceLexer);
};
graphql_parser_GeneratedLexer.__name__ = true;
graphql_parser_GeneratedLexer.createLexer = function(source,options) {
	var startOfFileToken = graphql_parser_TokUtil.asToken("<SOF>",0,0,0,0,null);
	var lexer = new graphql_parser_GeneratedLexer(options);
	lexer.source = source;
	lexer.lastToken = startOfFileToken;
	lexer.token = startOfFileToken;
	return lexer;
};
graphql_parser_GeneratedLexer.prototype = {
	advanceLexer: function() {
		this.lastToken = this.token;
		var token = this.token = this.lookahead();
		return token;
	}
	,lookahead: function() {
		var token = this.token;
		if(token.kind != "<EOF>") {
			while(true) {
				if(token.next != null) {
					token = token.next;
				} else {
					token = token.next = this.readToken(this,token);
				}
				if(!(token.kind == "Comment")) {
					break;
				}
			}
		}
		return token;
	}
	,printCharCode: function(code) {
		if(code < 127) {
			return JSON.stringify(String.fromCharCode(code));
		} else {
			return "ESCMAD";
		}
	}
	,readToken: function(lexer,prev) {
		var source = lexer.source;
		var body = source;
		var bodyLength = body.length;
		var pos = this.positionAfterWhitespace(body,prev.end,lexer);
		var line = lexer.line;
		var col = 1 + pos - lexer.lineStart;
		if(pos >= bodyLength) {
			return graphql_parser_TokUtil.asToken("<EOF>",bodyLength,bodyLength,line,col,prev);
		}
		var code = source.string.charCodeAt(pos + source.start);
		if(code < 32 && code != 9 && code != 10 && code != 13) {
			throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,pos,"Cannot contain the invalid character " + this.printCharCode(code) + "."));
		}
		switch(code) {
		case 33:
			return graphql_parser_TokUtil.asToken("!",pos,pos + 1,line,col,prev);
		case 34:
			if(source.string.charCodeAt(pos + 1 + source.start) == 34 && source.string.charCodeAt(pos + 2 + source.start) == 34) {
				return this.readBlockString(source,pos,line,col,prev);
			}
			return this.readString(source,pos,line,col,prev);
		case 35:
			return this.readComment(source,pos,line,col,prev);
		case 36:
			return graphql_parser_TokUtil.asToken("$",pos,pos + 1,line,col,prev);
		case 38:
			return graphql_parser_TokUtil.asToken("&",pos,pos + 1,line,col,prev);
		case 40:
			return graphql_parser_TokUtil.asToken("(",pos,pos + 1,line,col,prev);
		case 41:
			return graphql_parser_TokUtil.asToken(")",pos,pos + 1,line,col,prev);
		case 46:
			if(source.string.charCodeAt(pos + 1 + source.start) == 46 && source.string.charCodeAt(pos + 2 + source.start) == 46) {
				return graphql_parser_TokUtil.asToken("...",pos,pos + 3,line,col,prev);
			}
			break;
		case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
			return this.readNumber(source,pos,code,line,col,prev);
		case 58:
			return graphql_parser_TokUtil.asToken(":",pos,pos + 1,line,col,prev);
		case 61:
			return graphql_parser_TokUtil.asToken("=",pos,pos + 1,line,col,prev);
		case 64:
			return graphql_parser_TokUtil.asToken("@",pos,pos + 1,line,col,prev);
		case 91:
			return graphql_parser_TokUtil.asToken("[",pos,pos + 1,line,col,prev);
		case 93:
			return graphql_parser_TokUtil.asToken("]",pos,pos + 1,line,col,prev);
		case 65:case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 82:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 95:case 97:case 98:case 99:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 108:case 109:case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:case 118:case 119:case 120:case 121:case 122:
			return this.readName(source,pos,line,col,prev);
		case 123:
			return graphql_parser_TokUtil.asToken("{",pos,pos + 1,line,col,prev);
		case 124:
			return graphql_parser_TokUtil.asToken("|",pos,pos + 1,line,col,prev);
		case 125:
			return graphql_parser_TokUtil.asToken("}",pos,pos + 1,line,col,prev);
		}
		throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,pos,this.unexpectedCharacterMessage(code)));
	}
	,unexpectedCharacterMessage: function(code) {
		if(code == 39) {
			return "Unexpected single quote character ('), did you mean to use " + "a double quote (\")?";
		}
		return "Cannot parse the unexpected character " + this.printCharCode(code) + ".";
	}
	,positionAfterWhitespace: function(body,startPosition,lexer) {
		var bodyLength = body.length;
		var position = startPosition;
		while(position < bodyLength) {
			var this1 = this.source;
			var code = this1.string.charCodeAt(position + this1.start);
			if(code == 9 || code == 32 || code == 44 || code == 65279) {
				++position;
			} else if(code == 10) {
				++position;
				++lexer.line;
				lexer.lineStart = position;
			} else if(code == 13) {
				var this2 = this.source;
				if(this2.string.charCodeAt(position + 1 + this2.start) == 10) {
					position += 2;
				} else {
					++position;
				}
				++lexer.line;
				lexer.lineStart = position;
			} else {
				break;
			}
		}
		return position;
	}
	,readComment: function(source,start,line,col,prev) {
		var body = source;
		var code;
		var position = start;
		while(true) {
			code = source.string.charCodeAt(++position + source.start);
			if(!(code != null && (code > 31 || code == 9))) {
				break;
			}
		}
		var range_min;
		var range_max;
		range_min = start + 1;
		range_max = position;
		return graphql_parser_TokUtil.asToken("Comment",start,position,line,col,prev,tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max) + body.start).toString());
	}
	,readNumber: function(source,start,firstCode,line,col,prev) {
		var body = source;
		var code = firstCode;
		var position = start;
		var isFloat = false;
		if(code == 45) {
			code = source.string.charCodeAt(++position + source.start);
		}
		if(code == 48) {
			code = source.string.charCodeAt(++position + source.start);
			if(code >= 48 && code <= 57) {
				throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Invalid number, unexpected digit after 0: " + this.printCharCode(code) + "."));
			}
		} else {
			position = this.readDigits(source,position,code);
			code = source.string.charCodeAt(position + source.start);
		}
		if(code == 46) {
			isFloat = true;
			code = source.string.charCodeAt(++position + source.start);
			position = this.readDigits(source,position,code);
			code = source.string.charCodeAt(position + source.start);
		}
		if(code == 69 || code == 101) {
			isFloat = true;
			code = source.string.charCodeAt(++position + source.start);
			if(code == 43 || code == 45) {
				code = source.string.charCodeAt(++position + source.start);
			}
			position = this.readDigits(source,position,code);
		}
		var range_min;
		var range_max;
		range_min = start;
		range_max = position;
		return graphql_parser_TokUtil.asToken(isFloat ? "Float" : "Int",start,position,line,col,prev,tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max) + body.start).toString());
	}
	,readDigits: function(source,start,firstCode) {
		var body = source;
		var position = start;
		var code = firstCode;
		if(code >= 48 && code <= 57) {
			while(true) {
				code = source.string.charCodeAt(++position + source.start);
				if(!(code >= 48 && code <= 57)) {
					break;
				}
			}
			return position;
		}
		throw new js__$Boot_HaxeError(this.syntaxError(source,this.line,this.lineStart,position,"Invalid number, expected digit but got: " + this.printCharCode(code) + "."));
	}
	,readString: function(source,start,line,col,prev) {
		var body = source;
		var position = start + 1;
		var chunkStart = position;
		var code = 0;
		var value = "";
		while(true) {
			var tmp;
			var tmp1;
			var tmp2;
			if(position < body.length) {
				code = source.string.charCodeAt(position + source.start);
				tmp2 = code != null;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = code != 10;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				tmp = code != 13;
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			if(code == 34) {
				var range_min;
				var range_max;
				range_min = chunkStart;
				range_max = position;
				value += tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max) + body.start).toString();
				return graphql_parser_TokUtil.asToken("String",start,position + 1,line,col,prev,value);
			}
			if(code < 32 && code != 9) {
				throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Invalid character within String: " + this.printCharCode(code) + "."));
			}
			++position;
			if(code == 92) {
				var range_min1;
				var range_max1;
				range_min1 = chunkStart;
				range_max1 = position - 1;
				value += tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min1) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max1) + body.start).toString();
				code = source.string.charCodeAt(position + source.start);
				switch(code) {
				case 34:
					value += "\"";
					break;
				case 47:
					value += "/";
					break;
				case 92:
					value += "\\";
					break;
				case 98:
					value += "\x08";
					break;
				case 102:
					value += "\x0C";
					break;
				case 110:
					value += "\n";
					break;
				case 114:
					value += "\r";
					break;
				case 116:
					value += "\t";
					break;
				case 117:
					var charCode = this.uniCharCode(source.string.charCodeAt(position + 1 + source.start),source.string.charCodeAt(position + 2 + source.start),source.string.charCodeAt(position + 3 + source.start),source.string.charCodeAt(position + 4 + source.start));
					if(charCode < 0) {
						var range_min2;
						var range_max2;
						range_min2 = position + 1;
						range_max2 = position + 5;
						throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Invalid character escape sequence: " + ("\\u" + tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min2) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max2) + body.start).toString() + ".")));
					}
					value += String.fromCharCode(charCode);
					position += 4;
					break;
				default:
					throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Invalid character escape sequence: " + String.fromCharCode(code) + "."));
				}
				chunkStart = ++position;
			}
		}
		throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Unterminated string."));
	}
	,readBlockString: function(source,start,line,col,prev) {
		var body = source;
		var position = start + 3;
		var chunkStart = position;
		var code = 0;
		var rawValue = "";
		while(true) {
			var tmp;
			if(position < body.length) {
				code = source.string.charCodeAt(position + source.start);
				tmp = code != null;
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			if(code == 34 && source.string.charCodeAt(position + 1 + source.start) == 34 && source.string.charCodeAt(position + 2 + source.start) == 34) {
				var range_min;
				var range_max;
				range_min = chunkStart;
				range_max = position;
				rawValue += tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max) + body.start).toString();
				var tmp1 = position + 3;
				throw new js__$Boot_HaxeError("TODO: implement blockStringValue(rawValue)");
			}
			if(code < 32 && code != 9 && code != 10 && code != 13) {
				throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Invalid character within String: " + this.printCharCode(code) + "."));
			}
			if(code == 92 && source.string.charCodeAt(position + 1 + source.start) == 34 && source.string.charCodeAt(position + 2 + source.start) == 34 && source.string.charCodeAt(position + 3 + source.start) == 34) {
				var range_min1;
				var range_max1;
				range_min1 = chunkStart;
				range_max1 = position;
				rawValue += tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min1) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max1) + body.start).toString() + "\"\"\"";
				position += 4;
				chunkStart = position;
			} else {
				++position;
			}
		}
		throw new js__$Boot_HaxeError(this.syntaxError(source,line,this.lineStart,position,"Unterminated string."));
	}
	,uniCharCode: function(a,b,c,d) {
		return this.char2hex(a) << 12 | this.char2hex(b) << 8 | this.char2hex(c) << 4 | this.char2hex(d);
	}
	,char2hex: function(a) {
		if(a >= 48 && a <= 57) {
			return a - 48;
		} else if(a >= 65 && a <= 70) {
			return a - 55;
		} else if(a >= 97 && a <= 102) {
			return a - 87;
		} else {
			return -1;
		}
	}
	,readName: function(source,start,line,col,prev) {
		var body = source;
		var bodyLength = body.length;
		var position = start + 1;
		var code = 0;
		while(true) {
			var tmp;
			var tmp1;
			if(position != bodyLength) {
				code = source.string.charCodeAt(position + source.start);
				tmp1 = code != null;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				if(!(code == 95 || code >= 48 && code <= 57 || code >= 65 && code <= 90)) {
					if(code >= 97) {
						tmp = code <= 122;
					} else {
						tmp = false;
					}
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			++position;
		}
		var range_min;
		var range_max;
		range_min = start;
		range_max = position;
		return graphql_parser_TokUtil.asToken("Name",start,position,line,col,prev,tink_parse__$StringSlice_StringSlice_$Impl_$._new(body.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(body,range_min) + body.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(body,range_max) + body.start).toString());
	}
	,syntaxError: function(source,line,col,start,msg) {
		return graphql_parser_Parser.syntaxError(source,line,col,start,msg);
	}
	,__class__: graphql_parser_GeneratedLexer
};
var graphql_parser_TokUtil = function() { };
graphql_parser_TokUtil.__name__ = true;
graphql_parser_TokUtil.asToken = function(kind,start,end,line,column,prev,value) {
	return { kind : kind, start : start, end : end, line : line, column : column, value : value, prev : prev, next : null};
};
var graphql_parser_GeneratedParser = function() {
};
graphql_parser_GeneratedParser.__name__ = true;
graphql_parser_GeneratedParser.prototype = {
	parseName: function(lexer) {
		var token = this.expect(lexer,"Name");
		return { kind : "Name", value : token.value, loc : this.loc(lexer,token)};
	}
	,parseDocument: function(lexer) {
		var start = lexer.token;
		this.expect(lexer,"<SOF>");
		var definitions = [];
		while(true) {
			definitions.push(this.parseDefinition(lexer));
			if(!(!this.skip(lexer,"<EOF>"))) {
				break;
			}
		}
		return { kind : "Document", definitions : definitions, loc : this.loc(lexer,start)};
	}
	,parseDefinition: function(lexer) {
		if(this.peek(lexer,"Name")) {
			var _g = lexer.token.value;
			switch(_g) {
			case "fragment":case "mutation":case "query":case "subscription":
				return this.parseExecutableDefinition(lexer);
			case "directive":case "enum":case "extend":case "input":case "interface":case "scalar":case "schema":case "type":case "union":
				return this.parseTypeSystemDefinition(lexer);
			}
		} else if(this.peek(lexer,"{")) {
			return this.parseExecutableDefinition(lexer);
		} else if(this.peekDescription(lexer)) {
			return this.parseTypeSystemDefinition(lexer);
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer));
	}
	,parseExecutableDefinition: function(lexer) {
		if(this.peek(lexer,"Name")) {
			var _g = lexer.token.value;
			switch(_g) {
			case "fragment":
				return this.parseFragmentDefinition(lexer);
			case "mutation":case "query":case "subscription":
				return this.parseOperationDefinition(lexer);
			}
		} else if(this.peek(lexer,"{")) {
			return this.parseOperationDefinition(lexer);
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer));
	}
	,parseOperationDefinition: function(lexer) {
		var start = lexer.token;
		if(this.peek(lexer,"{")) {
			return { kind : "OperationDefinition", operation : "query", name : null, variableDefinitions : [], directives : [], selectionSet : this.parseSelectionSet(lexer), loc : this.loc(lexer,start)};
		}
		var operation = this.parseOperationType(lexer);
		var name = null;
		if(this.peek(lexer,"Name")) {
			name = this.parseName(lexer);
		}
		return { kind : "OperationDefinition", operation : operation, name : name, variableDefinitions : this.parseVariableDefinitions(lexer), directives : this.parseDirectives(lexer,false), selectionSet : this.parseSelectionSet(lexer), loc : this.loc(lexer,start)};
	}
	,parseOperationType: function(lexer) {
		var operationToken = this.expect(lexer,"Name");
		var _g = operationToken.value;
		switch(_g) {
		case "mutation":
			return "mutation";
		case "query":
			return "query";
		case "subscription":
			return "subscription";
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer,operationToken));
	}
	,parseVariableDefinitions: function(lexer) {
		if(this.peek(lexer,"(")) {
			return this.many(lexer,"(",$bind(this,this.parseVariableDefinition),")");
		} else {
			return [];
		}
	}
	,parseVariableDefinition: function(lexer) {
		var start = lexer.token;
		var tmp = this.parseVariable(lexer);
		this.expect(lexer,":");
		return { kind : "VariableDefinition", variable : tmp, type : this.parseTypeReference(lexer), defaultValue : this.skip(lexer,"=") ? this.parseValueLiteral(lexer,true) : null, loc : this.loc(lexer,start)};
	}
	,parseVariable: function(lexer) {
		var start = lexer.token;
		this.expect(lexer,"$");
		return { kind : "Variable", name : this.parseName(lexer), loc : this.loc(lexer,start)};
	}
	,parseSelectionSet: function(lexer) {
		var start = lexer.token;
		return { kind : "SelectionSet", selections : this.many(lexer,"{",$bind(this,this.parseSelection),"}"), loc : this.loc(lexer,start)};
	}
	,parseSelection: function(lexer) {
		if(this.peek(lexer,"...")) {
			return this.parseFragment(lexer);
		} else {
			return this.parseField(lexer);
		}
	}
	,parseField: function(lexer) {
		var start = lexer.token;
		var nameOrAlias = this.parseName(lexer);
		var alias = null;
		var name = null;
		if(this.skip(lexer,":")) {
			alias = nameOrAlias;
			name = this.parseName(lexer);
		} else {
			name = nameOrAlias;
		}
		return { kind : "Field", alias : alias, name : name, 'arguments' : this.parseArguments(lexer,false), directives : this.parseDirectives(lexer,false), selectionSet : this.peek(lexer,"{") ? this.parseSelectionSet(lexer) : null, loc : this.loc(lexer,start)};
	}
	,parseArguments: function(lexer,isConst) {
		var item = isConst ? $bind(this,this.parseConstArgument) : $bind(this,this.parseArgument);
		if(this.peek(lexer,"(")) {
			return this.many(lexer,"(",item,")");
		} else {
			return [];
		}
	}
	,parseArgument: function(lexer) {
		var start = lexer.token;
		var tmp = this.parseName(lexer);
		this.expect(lexer,":");
		return { kind : "Argument", name : tmp, value : this.parseValueLiteral(lexer,false), loc : this.loc(lexer,start)};
	}
	,parseConstArgument: function(lexer) {
		var start = lexer.token;
		var tmp = this.parseName(lexer);
		this.expect(lexer,":");
		return { kind : "Argument", name : tmp, value : this.parseConstValue(lexer), loc : this.loc(lexer,start)};
	}
	,parseFragment: function(lexer) {
		var start = lexer.token;
		this.expect(lexer,"...");
		if(this.peek(lexer,"Name") && lexer.token.value != "on") {
			return { kind : "FragmentSpread", name : this.parseFragmentName(lexer), directives : this.parseDirectives(lexer,false), loc : this.loc(lexer,start)};
		}
		var typeCondition = null;
		if(lexer.token.value == "on") {
			lexer.advance();
			typeCondition = this.parseNamedType(lexer);
		}
		return { kind : "InlineFragment", typeCondition : typeCondition, directives : this.parseDirectives(lexer,false), selectionSet : this.parseSelectionSet(lexer), loc : this.loc(lexer,start)};
	}
	,parseFragmentDefinition: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"fragment");
		if(lexer.options.experimentalFragmentVariables) {
			var tmp = this.parseFragmentName(lexer);
			var tmp1 = this.parseVariableDefinitions(lexer);
			this.expectKeyword(lexer,"on");
			return { kind : "FragmentDefinition", name : tmp, variableDefinitions : tmp1, typeCondition : this.parseNamedType(lexer), directives : this.parseDirectives(lexer,false), selectionSet : this.parseSelectionSet(lexer), loc : this.loc(lexer,start)};
		}
		var tmp2 = this.parseFragmentName(lexer);
		this.expectKeyword(lexer,"on");
		return { kind : "FragmentDefinition", name : tmp2, typeCondition : this.parseNamedType(lexer), directives : this.parseDirectives(lexer,false), selectionSet : this.parseSelectionSet(lexer), loc : this.loc(lexer,start)};
	}
	,parseFragmentName: function(lexer) {
		if(lexer.token.value == "on") {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return this.parseName(lexer);
	}
	,parseValueLiteral: function(lexer,isConst) {
		var token = lexer.token;
		var _g = token.kind;
		switch(_g) {
		case "$":
			if(!isConst) {
				return this.parseVariable(lexer);
			}
			break;
		case "Float":
			lexer.advance();
			return { kind : "FloatValue", value : token.value, loc : this.loc(lexer,token)};
		case "Int":
			lexer.advance();
			return { kind : "IntValue", value : token.value, loc : this.loc(lexer,token)};
		case "Name":
			if(token.value == "true" || token.value == "false") {
				lexer.advance();
				return { kind : "BooleanValue", value : token.value == "true", loc : this.loc(lexer,token)};
			} else if(token.value == "null") {
				lexer.advance();
				return { kind : "NullValue", loc : this.loc(lexer,token)};
			}
			lexer.advance();
			return { kind : "EnumValue", value : token.value, loc : this.loc(lexer,token)};
		case "BlockString":case "String":
			return this.parseStringLiteral(lexer);
		case "[":
			return this.parseList(lexer,isConst);
		case "{":
			return this.parseObject(lexer,isConst);
		default:
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer));
	}
	,parseStringLiteral: function(lexer) {
		var token = lexer.token;
		lexer.advance();
		return { kind : "StringValue", value : token.value, block : token.kind == "BlockString", loc : this.loc(lexer,token)};
	}
	,parseConstValue: function(lexer) {
		return this.parseValueLiteral(lexer,true);
	}
	,parseValueValue: function(lexer) {
		return this.parseValueLiteral(lexer,false);
	}
	,parseList: function(lexer,isConst) {
		var start = lexer.token;
		var item = isConst ? $bind(this,this.parseConstValue) : $bind(this,this.parseValueValue);
		return { kind : "ListValue", values : this.any(lexer,"[",item,"]"), loc : this.loc(lexer,start)};
	}
	,parseObject: function(lexer,isConst) {
		var start = lexer.token;
		this.expect(lexer,"{");
		var fields = [];
		while(!this.skip(lexer,"}")) fields.push(this.parseObjectField(lexer,isConst));
		return { kind : "ObjectValue", fields : fields, loc : this.loc(lexer,start)};
	}
	,parseObjectField: function(lexer,isConst) {
		var start = lexer.token;
		var tmp = this.parseName(lexer);
		this.expect(lexer,":");
		return { kind : "ObjectField", name : tmp, value : this.parseValueLiteral(lexer,isConst), loc : this.loc(lexer,start)};
	}
	,parseDirectives: function(lexer,isConst) {
		var directives = [];
		while(this.peek(lexer,"@")) directives.push(this.parseDirective(lexer,isConst));
		return directives;
	}
	,parseDirective: function(lexer,isConst) {
		var start = lexer.token;
		this.expect(lexer,"@");
		return { kind : "Directive", name : this.parseName(lexer), 'arguments' : this.parseArguments(lexer,isConst), loc : this.loc(lexer,start)};
	}
	,parseTypeReference: function(lexer) {
		var start = lexer.token;
		var type = null;
		if(this.skip(lexer,"[")) {
			type = this.parseTypeReference(lexer);
			this.expect(lexer,"]");
			type = { kind : "ListType", type : type, loc : this.loc(lexer,start)};
		} else {
			type = this.parseNamedType(lexer);
		}
		if(this.skip(lexer,"!")) {
			return { kind : "NonNullType", type : type, loc : this.loc(lexer,start)};
		}
		return type;
	}
	,parseNamedType: function(lexer) {
		var start = lexer.token;
		return { kind : "NamedType", name : this.parseName(lexer), loc : this.loc(lexer,start)};
	}
	,parseTypeSystemDefinition: function(lexer) {
		var keywordToken = this.peekDescription(lexer) ? lexer.lookahead() : lexer.token;
		if(keywordToken.kind == "Name") {
			var _g = keywordToken.value;
			switch(_g) {
			case "directive":
				return this.parseDirectiveDefinition(lexer);
			case "enum":
				return this.parseEnumTypeDefinition(lexer);
			case "extend":
				return this.parseTypeExtension(lexer);
			case "input":
				return this.parseInputObjectTypeDefinition(lexer);
			case "interface":
				return this.parseInterfaceTypeDefinition(lexer);
			case "scalar":
				return this.parseScalarTypeDefinition(lexer);
			case "schema":
				return this.parseSchemaDefinition(lexer);
			case "type":
				return this.parseObjectTypeDefinition(lexer);
			case "union":
				return this.parseUnionTypeDefinition(lexer);
			}
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer,keywordToken));
	}
	,peekDescription: function(lexer) {
		if(!this.peek(lexer,"String")) {
			return this.peek(lexer,"BlockString");
		} else {
			return true;
		}
	}
	,parseDescription: function(lexer) {
		if(!this.peekDescription(lexer)) {
			return null;
		}
		return this.parseStringLiteral(lexer);
	}
	,parseSchemaDefinition: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"schema");
		var directives = this.parseDirectives(lexer,true);
		var operationTypes = this.many(lexer,"{",$bind(this,this.parseOperationTypeDefinition),"}");
		return { kind : "SchemaDefinition", directives : directives, operationTypes : operationTypes, loc : this.loc(lexer,start)};
	}
	,parseOperationTypeDefinition: function(lexer) {
		var start = lexer.token;
		var operation = this.parseOperationType(lexer);
		this.expect(lexer,":");
		var type = this.parseNamedType(lexer);
		return { kind : "OperationTypeDefinition", operation : operation, type : type, loc : this.loc(lexer,start)};
	}
	,parseScalarTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"scalar");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		return { kind : "ScalarTypeDefinition", description : description, name : name, directives : directives, loc : this.loc(lexer,start)};
	}
	,parseObjectTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"type");
		var name = this.parseName(lexer);
		var interfaces = this.parseImplementsInterfaces(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseFieldsDefinition(lexer);
		return { kind : "ObjectTypeDefinition", description : description, name : name, interfaces : interfaces, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseImplementsInterfaces: function(lexer) {
		var types = [];
		if(lexer.token.value == "implements") {
			lexer.advance();
			this.skip(lexer,"&");
			while(true) {
				types.push(this.parseNamedType(lexer));
				if(!(this.skip(lexer,"&") || lexer.options.allowLegacySDLImplementsInterfaces && this.peek(lexer,"Name"))) {
					break;
				}
			}
		}
		return types;
	}
	,parseFieldsDefinition: function(lexer) {
		if(lexer.options.allowLegacySDLEmptyFields && this.peek(lexer,"{") && lexer.lookahead().kind == "}") {
			lexer.advance();
			lexer.advance();
			return [];
		}
		if(this.peek(lexer,"{")) {
			return this.many(lexer,"{",$bind(this,this.parseFieldDefinition),"}");
		} else {
			return [];
		}
	}
	,parseFieldDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		var name = this.parseName(lexer);
		var args = this.parseArgumentDefs(lexer);
		this.expect(lexer,":");
		var type = this.parseTypeReference(lexer);
		var directives = this.parseDirectives(lexer,true);
		return { kind : "FieldDefinition", description : description, name : name, 'arguments' : args, type : type, directives : directives, loc : this.loc(lexer,start)};
	}
	,parseArgumentDefs: function(lexer) {
		if(!this.peek(lexer,"(")) {
			return [];
		}
		return this.many(lexer,"(",$bind(this,this.parseInputValueDef),")");
	}
	,parseInputValueDef: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		var name = this.parseName(lexer);
		this.expect(lexer,":");
		var type = this.parseTypeReference(lexer);
		var defaultValue = null;
		if(this.skip(lexer,"=")) {
			defaultValue = this.parseConstValue(lexer);
		}
		var directives = this.parseDirectives(lexer,true);
		return { kind : "InputValueDefinition", description : description, name : name, type : type, defaultValue : defaultValue, directives : directives, loc : this.loc(lexer,start)};
	}
	,parseInterfaceTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"interface");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseFieldsDefinition(lexer);
		return { kind : "InterfaceTypeDefinition", description : description, name : name, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseUnionTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"union");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var types = this.parseUnionMemberTypes(lexer);
		return { kind : "UnionTypeDefinition", description : description, name : name, directives : directives, types : types, loc : this.loc(lexer,start)};
	}
	,parseUnionMemberTypes: function(lexer) {
		var types = [];
		if(this.skip(lexer,"=")) {
			this.skip(lexer,"|");
			while(true) {
				types.push(this.parseNamedType(lexer));
				if(!this.skip(lexer,"|")) {
					break;
				}
			}
		}
		return types;
	}
	,parseEnumTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"enum");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var values = this.parseEnumValuesDefinition(lexer);
		return { kind : "EnumTypeDefinition", description : description, name : name, directives : directives, values : values, loc : this.loc(lexer,start)};
	}
	,parseEnumValuesDefinition: function(lexer) {
		if(this.peek(lexer,"{")) {
			return this.many(lexer,"{",$bind(this,this.parseEnumValueDefinition),"}");
		} else {
			return [];
		}
	}
	,parseEnumValueDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		return { kind : "EnumValueDefinition", description : description, name : name, directives : directives, loc : this.loc(lexer,start)};
	}
	,parseInputObjectTypeDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"input");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseInputFieldsDefinition(lexer);
		return { kind : "InputObjectTypeDefinition", description : description, name : name, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseInputFieldsDefinition: function(lexer) {
		if(this.peek(lexer,"{")) {
			return this.many(lexer,"{",$bind(this,this.parseInputValueDef),"}");
		} else {
			return [];
		}
	}
	,parseTypeExtension: function(lexer) {
		var keywordToken = lexer.lookahead();
		if(keywordToken.kind == "Name") {
			var _g = keywordToken.value;
			switch(_g) {
			case "enum":
				return this.parseEnumTypeExtension(lexer);
			case "input":
				return this.parseInputObjectTypeExtension(lexer);
			case "interface":
				return this.parseInterfaceTypeExtension(lexer);
			case "scalar":
				return this.parseScalarTypeExtension(lexer);
			case "type":
				return this.parseObjectTypeExtension(lexer);
			case "union":
				return this.parseUnionTypeExtension(lexer);
			}
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer,keywordToken));
	}
	,parseScalarTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"scalar");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		if(directives.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "ScalarTypeExtension", name : name, directives : directives, loc : this.loc(lexer,start)};
	}
	,parseObjectTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"type");
		var name = this.parseName(lexer);
		var interfaces = this.parseImplementsInterfaces(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseFieldsDefinition(lexer);
		if(interfaces.length == 0 && directives.length == 0 && fields.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "ObjectTypeExtension", name : name, interfaces : interfaces, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseInterfaceTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"interface");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseFieldsDefinition(lexer);
		if(directives.length == 0 && fields.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "InterfaceTypeExtension", name : name, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseUnionTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"union");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var types = this.parseUnionMemberTypes(lexer);
		if(directives.length == 0 && types.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "UnionTypeExtension", name : name, directives : directives, types : types, loc : this.loc(lexer,start)};
	}
	,parseEnumTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"enum");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var values = this.parseEnumValuesDefinition(lexer);
		if(directives.length == 0 && values.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "EnumTypeExtension", name : name, directives : directives, values : values, loc : this.loc(lexer,start)};
	}
	,parseInputObjectTypeExtension: function(lexer) {
		var start = lexer.token;
		this.expectKeyword(lexer,"extend");
		this.expectKeyword(lexer,"input");
		var name = this.parseName(lexer);
		var directives = this.parseDirectives(lexer,true);
		var fields = this.parseInputFieldsDefinition(lexer);
		if(directives.length == 0 && fields.length == 0) {
			throw new js__$Boot_HaxeError(this.unexpected(lexer));
		}
		return { kind : "InputObjectTypeExtension", name : name, directives : directives, fields : fields, loc : this.loc(lexer,start)};
	}
	,parseDirectiveDefinition: function(lexer) {
		var start = lexer.token;
		var description = this.parseDescription(lexer);
		this.expectKeyword(lexer,"directive");
		this.expect(lexer,"@");
		var name = this.parseName(lexer);
		var args = this.parseArgumentDefs(lexer);
		this.expectKeyword(lexer,"on");
		var locations = this.parseDirectiveLocations(lexer);
		return { kind : "DirectiveDefinition", description : description, name : name, 'arguments' : args, locations : locations, loc : this.loc(lexer,start)};
	}
	,parseDirectiveLocations: function(lexer) {
		this.skip(lexer,"|");
		var locations = [];
		while(true) {
			locations.push(this.parseDirectiveLocation(lexer));
			if(!this.skip(lexer,"|")) {
				break;
			}
		}
		return locations;
	}
	,parseDirectiveLocation: function(lexer) {
		var start = lexer.token;
		var name = this.parseName(lexer);
		var _this = graphql_parser_GeneratedParser.ValidDirectiveLocations;
		var key = name.value;
		if(__map_reserved[key] != null ? _this.getReserved(key) : _this.h[key]) {
			return name;
		}
		throw new js__$Boot_HaxeError(this.unexpected(lexer,start));
	}
	,peek: function(lexer,kind) {
		return lexer.token.kind == kind;
	}
	,skip: function(lexer,kind) {
		var match = lexer.token.kind == kind;
		if(match) {
			lexer.advance();
		}
		return match;
	}
	,expect: function(lexer,kind) {
		var token = lexer.token;
		if(token.kind == kind) {
			lexer.advance();
			return token;
		}
		throw new js__$Boot_HaxeError(this.syntaxError(lexer.source,lexer.line,lexer.lineStart,token.start,"Expected " + kind + ", found " + this.getTokenDesc(token)));
	}
	,expectKeyword: function(lexer,value) {
		var token = lexer.token;
		if(token.kind == "Name" && token.value == value) {
			lexer.advance();
			return token;
		}
		throw new js__$Boot_HaxeError(this.syntaxError(lexer.source,lexer.line,lexer.lineStart,token.start,"Expected \"" + value + "\", found " + this.getTokenDesc(token)));
	}
	,unexpected: function(lexer,atToken) {
		var token = atToken != null ? atToken : lexer.token;
		return this.syntaxError(lexer.source,lexer.line,lexer.lineStart,token.start,"Unexpected " + this.getTokenDesc(token));
	}
	,any: function(lexer,openKind,parseFn,closeKind) {
		this.expect(lexer,openKind);
		var nodes = [];
		while(!this.skip(lexer,closeKind)) nodes.push(parseFn(lexer));
		return nodes;
	}
	,many: function(lexer,openKind,parseFn,closeKind) {
		this.expect(lexer,openKind);
		var nodes = [parseFn(lexer)];
		while(!this.skip(lexer,closeKind)) nodes.push(parseFn(lexer));
		return nodes;
	}
	,loc: function(lexer,startToken) {
		if(lexer.options != null && lexer.options.noLocation) {
			return null;
		}
		return { start : startToken.start, end : lexer.lastToken.end, startToken : startToken, endToken : lexer.lastToken, source : lexer.source};
	}
	,syntaxError: function(source,line,lineStart,start,msg) {
		return graphql_parser_Parser.syntaxError(source,line,lineStart,start,msg);
	}
	,getTokenDesc: function(t) {
		return t.kind;
	}
	,__class__: graphql_parser_GeneratedParser
};
var graphql_parser_Pos = function(file,min,max,line,col) {
	this.file = file;
	this.min = min;
	this.max = max;
	this.line = line;
	this.col = col;
};
graphql_parser_Pos.__name__ = true;
graphql_parser_Pos.prototype = {
	__class__: graphql_parser_Pos
};
var graphql_parser_Err = function(message,pos) {
	this.message = message;
	this.pos = pos;
};
graphql_parser_Err.__name__ = true;
graphql_parser_Err.prototype = {
	__class__: graphql_parser_Err
};
var tink_parse_ParserBase = function(source) {
	this.source = source;
	this.max = source.length;
	this.pos = 0;
};
tink_parse_ParserBase.__name__ = true;
tink_parse_ParserBase.prototype = {
	chomp: function(start,offset) {
		if(offset == null) {
			offset = 0;
		}
		var this1 = this.source;
		var range_min;
		var range_max;
		range_min = start;
		range_max = this.pos + offset;
		return tink_parse__$StringSlice_StringSlice_$Impl_$._new(this1.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,range_min) + this1.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this1,range_max) + this1.start);
	}
	,upNext: function(cond) {
		this.skipIgnored();
		if(this.pos < this.max) {
			var this1 = this.source;
			var value = this1.string.charCodeAt(this.pos + this1.start);
			if(cond != null) {
				return cond(value);
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,'is': function(cond) {
		if(this.pos < this.max) {
			var this1 = this.source;
			var value = this1.string.charCodeAt(this.pos + this1.start);
			if(cond != null) {
				return cond(value);
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,doReadWhile: function(cond) {
		while(true) {
			var tmp;
			if(this.pos < this.max) {
				var this1 = this.source;
				var value = this1.string.charCodeAt(this.pos + this1.start);
				if(cond != null) {
					tmp = cond(value);
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			this.pos++;
		}
	}
	,readWhile: function(cond) {
		this.skipIgnored();
		var start = this.pos;
		while(true) {
			var tmp;
			if(this.pos < this.max) {
				var this1 = this.source;
				var value = this1.string.charCodeAt(this.pos + this1.start);
				if(cond != null) {
					tmp = cond(value);
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(!tmp) {
				break;
			}
			this.pos++;
		}
		var this2 = this.source;
		var range_min;
		var range_max;
		range_min = start;
		range_max = this.pos;
		return tink_parse__$StringSlice_StringSlice_$Impl_$._new(this2.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this2,range_min) + this2.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this2,range_max) + this2.start);
	}
	,skipIgnored: function() {
		while(this.lastSkip != this.pos) {
			this.lastSkip = this.pos;
			this.doSkipIgnored();
		}
		this.lastSkip = this.pos;
		return null;
	}
	,doSkipIgnored: function() {
	}
	,isNext: function(s) {
		return tink_parse__$StringSlice_StringSlice_$Impl_$.hasSub(this.source,s,this.pos);
	}
	,allow: function(s) {
		var e = this.skipIgnored();
		return this.allowHere(s);
	}
	,allowHere: function(s) {
		if(tink_parse__$StringSlice_StringSlice_$Impl_$.hasSub(this.source,s,this.pos)) {
			this.pos += s.length;
			return true;
		} else {
			return false;
		}
	}
	,expect: function(s) {
		if(!this.allow(s)) {
			this.die("expected " + s.toString());
		}
		return null;
	}
	,expectHere: function(s) {
		if(!this.allowHere(s)) {
			this.die("expected " + s.toString());
		}
		return null;
	}
	,upto: function(end,addEnd) {
		var _g = tink_parse__$StringSlice_StringSlice_$Impl_$.indexOf(this.source,end,this.pos);
		if(_g == -1) {
			var tmp = "expected " + end.toString();
			var from = this.pos;
			return tink_core_Outcome.Failure(this.makeError(tmp,this.doMakePos(from,from + 1)));
		} else {
			var v = _g;
			var this1 = this.source;
			var range_min;
			var range_max;
			range_min = this.pos;
			range_max = v + (addEnd ? end.length : 0);
			var ret = tink_parse__$StringSlice_StringSlice_$Impl_$._new(this1.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,range_min) + this1.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this1,range_max) + this1.start);
			this.pos = v + end.length;
			return tink_core_Outcome.Success(ret);
		}
	}
	,first: function(a,before) {
		var ret = "Failed to find either of " + a.join(",");
		var from = this.pos;
		var to = this.pos;
		var ret1 = tink_core_Outcome.Failure(this.makeError(ret,this.doMakePos(from,to == null ? from + 1 : to)));
		var min = this.max;
		var _g = 0;
		while(_g < a.length) {
			var s = a[_g];
			++_g;
			var _g1 = tink_parse__$StringSlice_StringSlice_$Impl_$.indexOf(this.source,tink_parse__$StringSlice_StringSlice_$Impl_$.ofString(s),this.pos);
			if(_g1 != -1) {
				var v = _g1;
				if(v < min) {
					min = v;
					ret1 = tink_core_Outcome.Success(s);
				}
			}
		}
		if(ret1[1] == 0) {
			var v1 = ret1[2];
			var this1 = this.source;
			var range_min;
			var range_max;
			range_min = this.pos;
			range_max = min;
			before(tink_parse__$StringSlice_StringSlice_$Impl_$._new(this1.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,range_min) + this1.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this1,range_max) + this1.start));
			this.pos = min + v1.length;
		}
		return ret1;
	}
	,die: function(message,range) {
		if(range == null) {
			range = new IntIterator(this.pos,this.pos + 1);
		}
		var from = range.min;
		var to = range.max;
		throw new js__$Boot_HaxeError(this.makeError(message,this.doMakePos(from,to == null ? from + 1 : to)));
	}
	,makeError: function(message,pos) {
		throw new js__$Boot_HaxeError("ni");
	}
	,read: function(reader) {
		this.skipIgnored();
		var start = this.pos;
		var ret = reader();
		var to = this.pos;
		return { data : ret, pos : this.doMakePos(start,to == null ? start + 1 : to), bytesRead : this.pos - start};
	}
	,done: function() {
		this.skipIgnored();
		return this.pos >= this.max;
	}
	,reject: function(s) {
		var tmp = "unexpected " + s.toString();
		var from = s.start;
		var to = s.end;
		throw new js__$Boot_HaxeError(this.makeError(tmp,this.doMakePos(from,to == null ? from + 1 : to)));
	}
	,makePos: function(from,to) {
		return this.doMakePos(from,to == null ? from + 1 : to);
	}
	,doMakePos: function(from,to) {
		throw new js__$Boot_HaxeError("ni");
	}
	,parseRepeatedly: function(reader,settings) {
		if(settings.start != null && !this.allow(settings.start)) {
			return;
		}
		if(this.allow(settings.end)) {
			return;
		}
		reader();
		while(this.allow(settings.sep)) {
			if(settings.allowTrailing && this.allow(settings.end)) {
				return;
			}
			reader();
		}
		this.expect(settings.end);
	}
	,parseList: function(reader,settings) {
		var ret = [];
		this.parseRepeatedly(function() {
			var tmp = reader();
			ret.push(tmp);
		},settings);
		return ret;
	}
	,__class__: tink_parse_ParserBase
};
var graphql_parser_Parser = function(schema,options,filename) {
	if(filename == null) {
		filename = "Untitled";
	}
	tink_parse_ParserBase.call(this,tink_parse__$StringSlice_StringSlice_$Impl_$.ofString(schema));
	var parser = new graphql_parser_GeneratedParser();
	if(options == null) {
		options = { };
	}
	var lexer = graphql_parser_GeneratedLexer.createLexer(this.source,options);
	try {
		this.document = parser.parseDocument(lexer);
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if( js_Boot.__instanceof(e,graphql_parser_Err) ) {
			var posmsg = e.pos != null ? "" + e.pos.line + ": characters " + e.pos.col + "-" + (e.pos.col + (e.pos.max - e.pos.min + 1)) : "";
			throw new js__$Boot_HaxeError("" + filename + ":" + posmsg + " Error: " + e.message);
		} else throw(e);
	}
};
graphql_parser_Parser.__name__ = true;
graphql_parser_Parser.syntaxError = function(source,line,lineStart,start,msg) {
	var col = start - lineStart;
	var _g = msg;
	return new graphql_parser_Err(_g,new graphql_parser_Pos(null,start,start,line,col));
};
graphql_parser_Parser.__super__ = tink_parse_ParserBase;
graphql_parser_Parser.prototype = $extend(tink_parse_ParserBase.prototype,{
	__class__: graphql_parser_Parser
});
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; return $x; };
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
haxe_ds_Either.Left = function(v) { var $x = ["Left",0,v]; $x.__enum__ = haxe_ds_Either; return $x; };
haxe_ds_Either.Right = function(v) { var $x = ["Right",1,v]; $x.__enum__ = haxe_ds_Either; return $x; };
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	__class__: haxe_ds_ObjectMap
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var react_Partial = function() { };
react_Partial.__name__ = true;
var react_PartialMacro = function() { };
react_PartialMacro.__name__ = true;
var React = require("react");
var React_Component = require("react").Component;
var ReactDOM = require("react-dom");
var react_ReactMacro = function() { };
react_ReactMacro.__name__ = true;
var tink_core_Annex = function(target) {
	this.target = target;
	this.registry = new haxe_ds_ObjectMap();
};
tink_core_Annex.__name__ = true;
tink_core_Annex.prototype = {
	__class__: tink_core_Annex
};
var tink_core__$Callback_Callback_$Impl_$ = {};
tink_core__$Callback_Callback_$Impl_$.__name__ = true;
tink_core__$Callback_Callback_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.toFunction = function(this1) {
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.invoke = function(this1,data) {
	if(tink_core__$Callback_Callback_$Impl_$.depth < 1000) {
		tink_core__$Callback_Callback_$Impl_$.depth++;
		this1(data);
		tink_core__$Callback_Callback_$Impl_$.depth--;
	} else {
		var _e = this1;
		var f = function(data1) {
			tink_core__$Callback_Callback_$Impl_$.invoke(_e,data1);
		};
		var a1 = data;
		tink_core__$Callback_Callback_$Impl_$.defer(function() {
			f(a1);
		});
	}
};
tink_core__$Callback_Callback_$Impl_$.ignore = function(cb) {
	return tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,tink_core_Noise.Noise);
	});
};
tink_core__$Callback_Callback_$Impl_$.fromNiladic = function(f) {
	var this1 = function(r) {
		f();
	};
	return this1;
};
tink_core__$Callback_Callback_$Impl_$.fromMany = function(callbacks) {
	return function(v) {
		var _g = 0;
		while(_g < callbacks.length) {
			var callback = callbacks[_g];
			++_g;
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,v);
		}
	};
};
tink_core__$Callback_Callback_$Impl_$.defer = function(f) {
	haxe_Timer.delay(f,0);
};
var tink_core__$Callback_LinkObject = function() { };
tink_core__$Callback_LinkObject.__name__ = true;
tink_core__$Callback_LinkObject.prototype = {
	__class__: tink_core__$Callback_LinkObject
};
var tink_core__$Callback_CallbackLink_$Impl_$ = {};
tink_core__$Callback_CallbackLink_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackLink_$Impl_$._new = function(link) {
	var this1 = new tink_core__$Callback_SimpleLink(link);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.cancel = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.dissolve = function(this1) {
	if(this1 != null) {
		this1.dissolve();
	}
};
tink_core__$Callback_CallbackLink_$Impl_$.toCallback = function(this1) {
	return function(_) {
		this1.dissolve();
	};
};
tink_core__$Callback_CallbackLink_$Impl_$.fromFunction = function(f) {
	var this1 = new tink_core__$Callback_SimpleLink(f);
	return this1;
};
tink_core__$Callback_CallbackLink_$Impl_$.join = function(a,b) {
	return new tink_core__$Callback_LinkPair(a,b);
};
tink_core__$Callback_CallbackLink_$Impl_$.fromMany = function(callbacks) {
	var this1 = new tink_core__$Callback_SimpleLink(function() {
		var _g = 0;
		while(_g < callbacks.length) {
			var cb = callbacks[_g];
			++_g;
			if(cb != null) {
				cb.dissolve();
			}
		}
	});
	return this1;
};
var tink_core__$Callback_SimpleLink = function(f) {
	this.f = f;
};
tink_core__$Callback_SimpleLink.__name__ = true;
tink_core__$Callback_SimpleLink.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_SimpleLink.prototype = {
	dissolve: function() {
		if(this.f != null) {
			this.f();
		}
	}
	,__class__: tink_core__$Callback_SimpleLink
};
var tink_core__$Callback_LinkPair = function(a,b) {
	this.dissolved = false;
	this.a = a;
	this.b = b;
};
tink_core__$Callback_LinkPair.__name__ = true;
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_LinkPair.prototype = {
	dissolve: function() {
		if(!this.dissolved) {
			this.dissolved = true;
			var this1 = this.a;
			if(this1 != null) {
				this1.dissolve();
			}
			var this2 = this.b;
			if(this2 != null) {
				this2.dissolve();
			}
		}
	}
	,__class__: tink_core__$Callback_LinkPair
};
var tink_core__$Callback_ListCell = function(cb,list) {
	if(cb == null) {
		throw new js__$Boot_HaxeError("callback expected but null received");
	}
	this.cb = cb;
	this.list = list;
};
tink_core__$Callback_ListCell.__name__ = true;
tink_core__$Callback_ListCell.__interfaces__ = [tink_core__$Callback_LinkObject];
tink_core__$Callback_ListCell.prototype = {
	invoke: function(data) {
		if(this.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(this.cb,data);
		}
	}
	,clear: function() {
		this.list = null;
		this.cb = null;
	}
	,dissolve: function() {
		var _g = this.list;
		if(_g != null) {
			var v = _g;
			this.clear();
			HxOverrides.remove(v,this);
		}
	}
	,__class__: tink_core__$Callback_ListCell
};
var tink_core__$Callback_CallbackList_$Impl_$ = {};
tink_core__$Callback_CallbackList_$Impl_$.__name__ = true;
tink_core__$Callback_CallbackList_$Impl_$._new = function() {
	var this1 = [];
	return this1;
};
tink_core__$Callback_CallbackList_$Impl_$.get_length = function(this1) {
	return this1.length;
};
tink_core__$Callback_CallbackList_$Impl_$.add = function(this1,cb) {
	var node = new tink_core__$Callback_ListCell(cb,this1);
	this1.push(node);
	return node;
};
tink_core__$Callback_CallbackList_$Impl_$.invoke = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slice();
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		if(cell.cb != null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cell.cb,data);
		}
	}
};
tink_core__$Callback_CallbackList_$Impl_$.clear = function(this1) {
	var _g = 0;
	var _g1 = this1.splice(0,this1.length);
	while(_g < _g1.length) {
		var cell = _g1[_g];
		++_g;
		cell.clear();
	}
};
var tink_core_TypedError = function(code,message,pos) {
	if(code == null) {
		code = 500;
	}
	this.isTinkError = true;
	this.code = code;
	this.message = message;
	this.pos = pos;
	this.exceptionStack = [];
	this.callStack = [];
};
tink_core_TypedError.__name__ = true;
tink_core_TypedError.withData = function(code,message,data,pos) {
	return tink_core_TypedError.typed(code,message,data,pos);
};
tink_core_TypedError.typed = function(code,message,data,pos) {
	var ret = new tink_core_TypedError(code,message,pos);
	ret.data = data;
	return ret;
};
tink_core_TypedError.ofJsError = function(e,pos) {
	return tink_core_TypedError.withData(500,e.message,e,pos);
};
tink_core_TypedError.asError = function(v) {
	if(v != null && v.isTinkError) {
		return v;
	} else {
		return null;
	}
};
tink_core_TypedError.catchExceptions = function(f,report,pos) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var _g = tink_core_TypedError.asError(e);
		var tmp;
		if(_g == null) {
			if(report == null) {
				tmp = tink_core_TypedError.withData(null,"Unexpected Error",e,pos);
			} else {
				tmp = report(e);
			}
		} else {
			var e1 = _g;
			tmp = e1;
		}
		return tink_core_Outcome.Failure(tmp);
	}
};
tink_core_TypedError.reporter = function(code,message,pos) {
	return function(e) {
		return tink_core_TypedError.withData(code,message,e,pos);
	};
};
tink_core_TypedError.rethrow = function(any) {
	throw js__$Boot_HaxeError.wrap(any);
};
tink_core_TypedError.tryFinally = function(f,cleanup) {
	try { return f(); } finally { cleanup(); }
	return null;
};
tink_core_TypedError.prototype = {
	printPos: function() {
		return this.pos.className + "." + this.pos.methodName + ":" + this.pos.lineNumber;
	}
	,toString: function() {
		var ret = "Error#" + this.code + ": " + this.message;
		if(this.pos != null) {
			ret += " @ " + this.printPos();
		}
		return ret;
	}
	,throwSelf: function() {
		throw new js__$Boot_HaxeError(this);
	}
	,__class__: tink_core_TypedError
};
var tink_core__$Error_Stack_$Impl_$ = {};
tink_core__$Error_Stack_$Impl_$.__name__ = true;
tink_core__$Error_Stack_$Impl_$.toString = function(this1) {
	return "Error stack not available. Compile with -D error_stack.";
};
var tink_core__$Future_FutureObject = function() { };
tink_core__$Future_FutureObject.__name__ = true;
tink_core__$Future_FutureObject.prototype = {
	__class__: tink_core__$Future_FutureObject
};
var tink_core__$Future_NeverFuture = function() {
};
tink_core__$Future_NeverFuture.__name__ = true;
tink_core__$Future_NeverFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NeverFuture.prototype = {
	map: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,flatMap: function(f) {
		return tink_core__$Future_NeverFuture.inst;
	}
	,handle: function(callback) {
		return null;
	}
	,gather: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,eager: function() {
		return tink_core__$Future_NeverFuture.inst;
	}
	,__class__: tink_core__$Future_NeverFuture
};
var tink_core_Noise = { __ename__ : true, __constructs__ : ["Noise"] };
tink_core_Noise.Noise = ["Noise",0];
tink_core_Noise.Noise.__enum__ = tink_core_Noise;
var tink_core__$Lazy_LazyObject = function() { };
tink_core__$Lazy_LazyObject.__name__ = true;
tink_core__$Lazy_LazyObject.prototype = {
	__class__: tink_core__$Lazy_LazyObject
};
var tink_core__$Lazy_LazyConst = function(value) {
	this.value = value;
};
tink_core__$Lazy_LazyConst.__name__ = true;
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyConst.prototype = {
	get: function() {
		return this.value;
	}
	,map: function(f) {
		return new tink_core__$Lazy_LazyConst(f(this.value));
	}
	,flatMap: function(f) {
		return f(this.value);
	}
	,__class__: tink_core__$Lazy_LazyConst
};
var tink_core__$Future_SyncFuture = function(value) {
	this.value = value;
};
tink_core__$Future_SyncFuture.__name__ = true;
tink_core__$Future_SyncFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SyncFuture.prototype = {
	map: function(f) {
		return new tink_core__$Future_SyncFuture(this.value.map(f));
	}
	,flatMap: function(f) {
		var l = this.value.map(f);
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return l.get().handle(cb);
		});
	}
	,handle: function(cb) {
		tink_core__$Callback_Callback_$Impl_$.invoke(cb,this.value.get());
		return null;
	}
	,eager: function() {
		return this;
	}
	,gather: function() {
		return this;
	}
	,__class__: tink_core__$Future_SyncFuture
};
var tink_core__$Future_Future_$Impl_$ = {};
tink_core__$Future_Future_$Impl_$.__name__ = true;
tink_core__$Future_Future_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Future_SimpleFuture(f);
	return this1;
};
tink_core__$Future_Future_$Impl_$.first = function(this1,other) {
	var ret = new tink_core_FutureTrigger();
	var l1 = this1.handle($bind(ret,ret.trigger));
	var l2 = other.handle($bind(ret,ret.trigger));
	var ret1 = ret;
	if(l1 != null) {
		var this2 = l1;
		ret1.handle(function(_) {
			this2.dissolve();
		});
	}
	if(l2 != null) {
		var this3 = l2;
		ret1.handle(function(_1) {
			this3.dissolve();
		});
	}
	return ret1;
};
tink_core__$Future_Future_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.map(f);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatMap = function(this1,next,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(next);
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.next = function(this1,n) {
	return this1.flatMap(function(v) {
		return n(v);
	});
};
tink_core__$Future_Future_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(t) {
		var ret1 = other.map(function(a) {
			return merger(t,a);
		});
		return ret1;
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.flatten = function(f) {
	return new tink_core__$Future_NestedFuture(f);
};
tink_core__$Future_Future_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		promise.then(function(a) {
			cb(tink_core_Outcome.Success(a));
		})["catch"](function(e) {
			var tmp = tink_core_Outcome.Failure(tink_core_TypedError.withData(null,e.message,e,{ fileName : "Future.hx", lineNumber : 78, className : "tink.core._Future.Future_Impl_", methodName : "ofJsPromise"}));
			cb(tmp);
		});
	});
};
tink_core__$Future_Future_$Impl_$.asPromise = function(s) {
	return s;
};
tink_core__$Future_Future_$Impl_$.ofMany = function(futures,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst([]));
	var _g = 0;
	while(_g < futures.length) {
		var f = [futures[_g]];
		++_g;
		var ret1 = ret.flatMap((function(f1) {
			return function(results) {
				var ret2 = (function() {
					return function(result) {
						return results.concat([result]);
					};
				})();
				var ret3 = f1[0].map(ret2);
				return ret3;
			};
		})(f));
		ret = ret1;
	}
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Future_Future_$Impl_$.fromMany = function(futures) {
	return tink_core__$Future_Future_$Impl_$.ofMany(futures);
};
tink_core__$Future_Future_$Impl_$.lazy = function(l) {
	return new tink_core__$Future_SyncFuture(l);
};
tink_core__$Future_Future_$Impl_$.sync = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
tink_core__$Future_Future_$Impl_$.async = function(f,lazy) {
	if(lazy == null) {
		lazy = false;
	}
	if(lazy) {
		return new tink_core__$Future_LazyTrigger(f);
	} else {
		var op = new tink_core_FutureTrigger();
		var wrapped = f;
		tink_core__$Callback_Callback_$Impl_$.invoke(wrapped,$bind(op,op.trigger));
		return op;
	}
};
tink_core__$Future_Future_$Impl_$.or = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.first(a,b);
};
tink_core__$Future_Future_$Impl_$.either = function(a,b) {
	var ret = a.map(haxe_ds_Either.Left);
	var ret1 = b.map(haxe_ds_Either.Right);
	return tink_core__$Future_Future_$Impl_$.first(ret,ret1);
};
tink_core__$Future_Future_$Impl_$.and = function(a,b) {
	return tink_core__$Future_Future_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return this1;
	});
};
tink_core__$Future_Future_$Impl_$._tryFailingFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return map(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFlatMap = function(f,map) {
	var ret = f.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var ret1 = map(d).map(tink_core_Outcome.Success);
			return ret1.gather();
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryFailingMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.flatMap(o,tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError(map));
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._tryMap = function(f,map) {
	var ret = f.map(function(o) {
		return tink_core_OutcomeTools.map(o,map);
	});
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._flatMap = function(f,map) {
	var ret = f.flatMap(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$._map = function(f,map) {
	var ret = f.map(map);
	return ret.gather();
};
tink_core__$Future_Future_$Impl_$.trigger = function() {
	return new tink_core_FutureTrigger();
};
var tink_core__$Future_Futuristic_$Impl_$ = {};
tink_core__$Future_Futuristic_$Impl_$.__name__ = true;
tink_core__$Future_Futuristic_$Impl_$.ofAny = function(v) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(v));
};
var tink_core__$Future_SimpleFuture = function(f) {
	this.f = f;
};
tink_core__$Future_SimpleFuture.__name__ = true;
tink_core__$Future_SimpleFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_SimpleFuture.prototype = {
	handle: function(callback) {
		return this.f(callback);
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		});
	}
	,flatMap: function(f) {
		var f1 = f;
		var _gthis = this;
		return tink_core__$Future_Future_$Impl_$.flatten(new tink_core__$Future_SimpleFuture(function(cb) {
			return _gthis.f(function(v) {
				var tmp = f1(v);
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,tmp);
			});
		}));
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,__class__: tink_core__$Future_SimpleFuture
};
var tink_core__$Future_NestedFuture = function(outer) {
	this.outer = outer;
};
tink_core__$Future_NestedFuture.__name__ = true;
tink_core__$Future_NestedFuture.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core__$Future_NestedFuture.prototype = {
	map: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.map(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,flatMap: function(f) {
		var ret = this.outer.flatMap(function(inner) {
			var ret1 = inner.flatMap(f);
			return ret1.gather();
		});
		return ret.gather();
	}
	,gather: function() {
		return tink_core_FutureTrigger.gatherFuture(this);
	}
	,eager: function() {
		var ret = tink_core_FutureTrigger.gatherFuture(this);
		ret.handle(tink_core__$Callback_Callback_$Impl_$.fromNiladic(function() {
		}));
		return ret;
	}
	,handle: function(cb) {
		var ret = null;
		ret = this.outer.handle(function(inner) {
			ret = inner.handle(function(result) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			});
		});
		return ret;
	}
	,__class__: tink_core__$Future_NestedFuture
};
var tink_core_FutureTrigger = function() {
	var this1 = [];
	this.list = this1;
};
tink_core_FutureTrigger.__name__ = true;
tink_core_FutureTrigger.__interfaces__ = [tink_core__$Future_FutureObject];
tink_core_FutureTrigger.gatherFuture = function(f) {
	var op = null;
	var this1 = new tink_core__$Future_SimpleFuture(function(cb) {
		if(op == null) {
			op = new tink_core_FutureTrigger();
			f.handle($bind(op,op.trigger));
			f = null;
		}
		return op.handle(cb);
	});
	return this1;
};
tink_core_FutureTrigger.prototype = {
	handle: function(callback) {
		var _g = this.list;
		if(_g == null) {
			tink_core__$Callback_Callback_$Impl_$.invoke(callback,this.result);
			return null;
		} else {
			var v = _g;
			return tink_core__$Callback_CallbackList_$Impl_$.add(v,callback);
		}
	}
	,map: function(f) {
		var _g = this.list;
		if(_g == null) {
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(this.result)));
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				var tmp = f(v1);
				ret.trigger(tmp);
			});
			return ret;
		}
	}
	,flatMap: function(f) {
		var _g = this.list;
		if(_g == null) {
			return f(this.result);
		} else {
			var v = _g;
			var ret = new tink_core_FutureTrigger();
			tink_core__$Callback_CallbackList_$Impl_$.add(this.list,function(v1) {
				f(v1).handle($bind(ret,ret.trigger));
			});
			return ret;
		}
	}
	,gather: function() {
		return this;
	}
	,eager: function() {
		return this;
	}
	,asFuture: function() {
		return this;
	}
	,trigger: function(result) {
		if(this.list == null) {
			return false;
		} else {
			var list = this.list;
			this.list = null;
			this.result = result;
			tink_core__$Callback_CallbackList_$Impl_$.invoke(list,result);
			tink_core__$Callback_CallbackList_$Impl_$.clear(list);
			return true;
		}
	}
	,__class__: tink_core_FutureTrigger
};
var tink_core__$Future_LazyTrigger = function(op) {
	this.op = op;
	tink_core_FutureTrigger.call(this);
};
tink_core__$Future_LazyTrigger.__name__ = true;
tink_core__$Future_LazyTrigger.__super__ = tink_core_FutureTrigger;
tink_core__$Future_LazyTrigger.prototype = $extend(tink_core_FutureTrigger.prototype,{
	eager: function() {
		if(this.op != null) {
			var op = this.op;
			this.op = null;
			tink_core__$Callback_Callback_$Impl_$.invoke(op,$bind(this,this.trigger));
		}
		return this;
	}
	,map: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.map.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					var tmp = f(v);
					cb(tmp);
				});
			},true);
		}
	}
	,flatMap: function(f) {
		var _gthis = this;
		if(this.op == null) {
			return tink_core_FutureTrigger.prototype.flatMap.call(this,f);
		} else {
			return tink_core__$Future_Future_$Impl_$.async(function(cb) {
				_gthis.handle(function(v) {
					f(v).handle(cb);
				});
			},true);
		}
	}
	,handle: function(cb) {
		this.eager();
		return tink_core_FutureTrigger.prototype.handle.call(this,cb);
	}
	,__class__: tink_core__$Future_LazyTrigger
});
var tink_core_JsPromiseTools = function() { };
tink_core_JsPromiseTools.__name__ = true;
tink_core_JsPromiseTools.toSurprise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core_JsPromiseTools.toPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
var tink_core__$Lazy_Lazy_$Impl_$ = {};
tink_core__$Lazy_Lazy_$Impl_$.__name__ = true;
tink_core__$Lazy_Lazy_$Impl_$.get = function(this1) {
	return this1.get();
};
tink_core__$Lazy_Lazy_$Impl_$.ofFunc = function(f) {
	return new tink_core__$Lazy_LazyFunc(f);
};
tink_core__$Lazy_Lazy_$Impl_$.map = function(this1,f) {
	return this1.map(f);
};
tink_core__$Lazy_Lazy_$Impl_$.flatMap = function(this1,f) {
	return this1.flatMap(f);
};
tink_core__$Lazy_Lazy_$Impl_$.ofConst = function(c) {
	return new tink_core__$Lazy_LazyConst(c);
};
var tink_core__$Lazy_LazyFunc = function(f) {
	this.f = f;
};
tink_core__$Lazy_LazyFunc.__name__ = true;
tink_core__$Lazy_LazyFunc.__interfaces__ = [tink_core__$Lazy_LazyObject];
tink_core__$Lazy_LazyFunc.prototype = {
	get: function() {
		if(this.f != null) {
			this.result = this.f();
			this.f = null;
		}
		return this.result;
	}
	,map: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var tmp = _gthis.get();
			return f(tmp);
		});
	}
	,flatMap: function(f) {
		var _gthis = this;
		return new tink_core__$Lazy_LazyFunc(function() {
			var this1 = _gthis.get();
			return f(this1).get();
		});
	}
	,__class__: tink_core__$Lazy_LazyFunc
};
var tink_core_NamedWith = function(name,value) {
	this.name = name;
	this.value = value;
};
tink_core_NamedWith.__name__ = true;
tink_core_NamedWith.prototype = {
	__class__: tink_core_NamedWith
};
var tink_core_OptionTools = function() { };
tink_core_OptionTools.__name__ = true;
tink_core_OptionTools.force = function(o,pos) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		throw new js__$Boot_HaxeError(new tink_core_TypedError(404,"Some value expected but none found",pos));
	}
};
tink_core_OptionTools.or = function(o,l) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return l.get();
	}
};
tink_core_OptionTools.orNull = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return v;
	} else {
		return null;
	}
};
tink_core_OptionTools.filter = function(o,f) {
	if(o[1] == 0) {
		var _hx_tmp = f(o[2]);
		if(_hx_tmp == false) {
			return haxe_ds_Option.None;
		} else {
			return o;
		}
	} else {
		return o;
	}
};
tink_core_OptionTools.satisfies = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return false;
	}
};
tink_core_OptionTools.equals = function(o,v) {
	if(o[1] == 0) {
		var v1 = o[2];
		return v1 == v;
	} else {
		return false;
	}
};
tink_core_OptionTools.map = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return haxe_ds_Option.Some(f(v));
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.flatMap = function(o,f) {
	if(o[1] == 0) {
		var v = o[2];
		return f(v);
	} else {
		return haxe_ds_Option.None;
	}
};
tink_core_OptionTools.iterator = function(o) {
	return new tink_core_OptionIter(o);
};
tink_core_OptionTools.toArray = function(o) {
	if(o[1] == 0) {
		var v = o[2];
		return [v];
	} else {
		return [];
	}
};
var tink_core_OptionIter = function(o) {
	this.alive = true;
	if(o[1] == 0) {
		var v = o[2];
		this.value = v;
	} else {
		this.alive = false;
	}
};
tink_core_OptionIter.__name__ = true;
tink_core_OptionIter.prototype = {
	hasNext: function() {
		return this.alive;
	}
	,next: function() {
		this.alive = false;
		return this.value;
	}
	,__class__: tink_core_OptionIter
};
var tink_core_Outcome = { __ename__ : true, __constructs__ : ["Success","Failure"] };
tink_core_Outcome.Success = function(data) { var $x = ["Success",0,data]; $x.__enum__ = tink_core_Outcome; return $x; };
tink_core_Outcome.Failure = function(failure) { var $x = ["Failure",1,failure]; $x.__enum__ = tink_core_Outcome; return $x; };
var tink_core_OutcomeTools = function() { };
tink_core_OutcomeTools.__name__ = true;
tink_core_OutcomeTools.sure = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		var failure = outcome[2];
		var _g = tink_core_TypedError.asError(failure);
		if(_g == null) {
			throw new js__$Boot_HaxeError(failure);
		} else {
			var e = _g;
			return e.throwSelf();
		}
		break;
	}
};
tink_core_OutcomeTools.toOption = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return haxe_ds_Option.Some(data);
	case 1:
		return haxe_ds_Option.None;
	}
};
tink_core_OutcomeTools.toOutcome = function(option,pos) {
	switch(option[1]) {
	case 0:
		var value = option[2];
		return tink_core_Outcome.Success(value);
	case 1:
		return tink_core_Outcome.Failure(new tink_core_TypedError(404,"Some value expected but none found in " + pos.fileName + "@line " + pos.lineNumber,{ fileName : "Outcome.hx", lineNumber : 47, className : "tink.core.OutcomeTools", methodName : "toOutcome"}));
	}
};
tink_core_OutcomeTools.orNull = function(outcome) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return null;
	}
};
tink_core_OutcomeTools.orUse = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.orTry = function(outcome,fallback) {
	switch(outcome[1]) {
	case 0:
		return outcome;
	case 1:
		return fallback.get();
	}
};
tink_core_OutcomeTools.equals = function(outcome,to) {
	switch(outcome[1]) {
	case 0:
		var data = outcome[2];
		return data == to;
	case 1:
		return false;
	}
};
tink_core_OutcomeTools.map = function(outcome,transform) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(transform(a));
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.isSuccess = function(outcome) {
	if(outcome[1] == 0) {
		return true;
	} else {
		return false;
	}
};
tink_core_OutcomeTools.flatMap = function(o,mapper) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$.apply(mapper,o);
};
tink_core_OutcomeTools.swap = function(outcome,v) {
	switch(outcome[1]) {
	case 0:
		var a = outcome[2];
		return tink_core_Outcome.Success(v);
	case 1:
		var f = outcome[2];
		return tink_core_Outcome.Failure(f);
	}
};
tink_core_OutcomeTools.attempt = function(f,report) {
	try {
		return tink_core_Outcome.Success(f());
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return tink_core_Outcome.Failure(report(e));
	}
};
tink_core_OutcomeTools.flatten = function(o) {
	switch(o[1]) {
	case 0:
		switch(o[2][1]) {
		case 0:
			var d = o[2][2];
			return tink_core_Outcome.Success(d);
		case 1:
			var f = o[2][2];
			return tink_core_Outcome.Failure(f);
		}
		break;
	case 1:
		var f1 = o[2];
		return tink_core_Outcome.Failure(f1);
	}
};
var tink_core__$Outcome_OutcomeMapper_$Impl_$ = {};
tink_core__$Outcome_OutcomeMapper_$Impl_$.__name__ = true;
tink_core__$Outcome_OutcomeMapper_$Impl_$._new = function(f) {
	var this1 = { f : f};
	return this1;
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.apply = function(this1,o) {
	return this1.f(o);
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withSameError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return tink_core_Outcome.Failure(f1);
		}
	});
};
tink_core__$Outcome_OutcomeMapper_$Impl_$.withEitherError = function(f) {
	return tink_core__$Outcome_OutcomeMapper_$Impl_$._new(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			var _g = f(d);
			switch(_g[1]) {
			case 0:
				var d1 = _g[2];
				return tink_core_Outcome.Success(d1);
			case 1:
				var f1 = _g[2];
				return tink_core_Outcome.Failure(haxe_ds_Either.Right(f1));
			}
			break;
		case 1:
			var f2 = o[2];
			return tink_core_Outcome.Failure(haxe_ds_Either.Left(f2));
		}
	});
};
var tink_core__$Pair_Pair_$Impl_$ = {};
tink_core__$Pair_Pair_$Impl_$.__name__ = true;
tink_core__$Pair_Pair_$Impl_$._new = function(a,b) {
	var this1 = new tink_core_MPair(a,b);
	return this1;
};
tink_core__$Pair_Pair_$Impl_$.get_a = function(this1) {
	return this1.a;
};
tink_core__$Pair_Pair_$Impl_$.get_b = function(this1) {
	return this1.b;
};
tink_core__$Pair_Pair_$Impl_$.toBool = function(this1) {
	return this1 != null;
};
tink_core__$Pair_Pair_$Impl_$.isNil = function(this1) {
	return this1 == null;
};
tink_core__$Pair_Pair_$Impl_$.nil = function() {
	return null;
};
var tink_core_MPair = function(a,b) {
	this.a = a;
	this.b = b;
};
tink_core_MPair.__name__ = true;
tink_core_MPair.prototype = {
	__class__: tink_core_MPair
};
var tink_core__$Promise_Promise_$Impl_$ = {};
tink_core__$Promise_Promise_$Impl_$.__name__ = true;
tink_core__$Promise_Promise_$Impl_$.eager = function(this1) {
	return this1.eager();
};
tink_core__$Promise_Promise_$Impl_$.map = function(this1,f) {
	var ret = this1.map(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.flatMap = function(this1,f) {
	var ret = this1.flatMap(f);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.tryRecover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.recover = function(this1,f) {
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(d));
		case 1:
			var e = o[2];
			return f(e);
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.mapError = function(this1,f) {
	var ret = this1.map(function(o) {
		switch(o[1]) {
		case 0:
			return o;
		case 1:
			var e = o[2];
			return tink_core_Outcome.Failure(f(e));
		}
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.handle = function(this1,cb) {
	return this1.handle(cb);
};
tink_core__$Promise_Promise_$Impl_$.noise = function(this1) {
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(v) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(tink_core_Noise.Noise));
	});
};
tink_core__$Promise_Promise_$Impl_$.isSuccess = function(this1) {
	var ret = this1.map(function(o) {
		return tink_core_OutcomeTools.isSuccess(o);
	});
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.next = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var ret = this1.flatMap(function(o) {
		switch(o[1]) {
		case 0:
			var d = o[2];
			return f(d);
		case 1:
			var f1 = o[2];
			return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Failure(f1)));
		}
	});
	if(gather) {
		return ret.gather();
	} else {
		return ret;
	}
};
tink_core__$Promise_Promise_$Impl_$.swap = function(this1,v) {
	return tink_core__$Future_Future_$Impl_$._tryMap(this1,function(_) {
		return v;
	});
};
tink_core__$Promise_Promise_$Impl_$.swapError = function(this1,e) {
	return tink_core__$Promise_Promise_$Impl_$.mapError(this1,function(_) {
		return e;
	});
};
tink_core__$Promise_Promise_$Impl_$.merge = function(this1,other,merger,gather) {
	if(gather == null) {
		gather = true;
	}
	return tink_core__$Promise_Promise_$Impl_$.next(this1,function(t) {
		return tink_core__$Promise_Promise_$Impl_$.next(other,function(a) {
			return merger(t,a);
		},false);
	},gather);
};
tink_core__$Promise_Promise_$Impl_$.and = function(a,b) {
	return tink_core__$Promise_Promise_$Impl_$.merge(a,b,function(a1,b1) {
		var this1 = new tink_core_MPair(a1,b1);
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(this1));
	});
};
tink_core__$Promise_Promise_$Impl_$.iterate = function(promises,$yield,$finally,lazy) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		var iter = $iterator(promises)();
		var next = null;
		next = function() {
			if(iter.hasNext()) {
				iter.next().handle(function(o) {
					switch(o[1]) {
					case 0:
						var v = o[2];
						$yield(v).handle(function(o1) {
							switch(o1[1]) {
							case 0:
								switch(o1[2][1]) {
								case 0:
									var ret = o1[2][2];
									cb(tink_core_Outcome.Success(ret));
									break;
								case 1:
									next();
									break;
								}
								break;
							case 1:
								var e = o1[2];
								cb(tink_core_Outcome.Failure(e));
								break;
							}
						});
						break;
					case 1:
						var e1 = o[2];
						cb(tink_core_Outcome.Failure(e1));
						break;
					}
				});
			} else {
				$finally.handle(cb);
			}
		};
		var next1 = next;
		next1();
	},lazy);
};
tink_core__$Promise_Promise_$Impl_$.ofJsPromise = function(promise) {
	return tink_core__$Future_Future_$Impl_$.ofJsPromise(promise);
};
tink_core__$Promise_Promise_$Impl_$.ofSpecific = function(s) {
	return s;
};
tink_core__$Promise_Promise_$Impl_$.ofFuture = function(f) {
	var ret = f.map(tink_core_Outcome.Success);
	return ret.gather();
};
tink_core__$Promise_Promise_$Impl_$.ofOutcome = function(o) {
	return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(o));
};
tink_core__$Promise_Promise_$Impl_$.ofError = function(e) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Failure(e));
};
tink_core__$Promise_Promise_$Impl_$.ofData = function(d) {
	return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(d));
};
tink_core__$Promise_Promise_$Impl_$.lazy = function(p) {
	return tink_core__$Future_Future_$Impl_$.async(function(cb) {
		p.get().handle(cb);
	},true);
};
tink_core__$Promise_Promise_$Impl_$.inParallel = function(a,lazy) {
	if(a.length == 0) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success([])));
	} else {
		return tink_core__$Future_Future_$Impl_$.async(function(cb) {
			var result = [];
			var pending = a.length;
			var links = null;
			var sync = false;
			var done = function(o) {
				if(links == null) {
					sync = true;
				} else if(links != null) {
					links.dissolve();
				}
				cb(o);
			};
			var fail = function(e) {
				done(tink_core_Outcome.Failure(e));
			};
			var set = function(index,value) {
				result[index] = value;
				if((pending -= 1) == 0) {
					done(tink_core_Outcome.Success(result));
				}
			};
			var linkArray = [];
			var _g1 = 0;
			var _g = a.length;
			while(_g1 < _g) {
				var i = [_g1++];
				if(sync) {
					break;
				}
				var i1 = i[0];
				var tmp = (function(i2) {
					return function(o1) {
						switch(o1[1]) {
						case 0:
							var v = o1[2];
							set(i2[0],v);
							break;
						case 1:
							var e1 = o1[2];
							fail(e1);
							break;
						}
					};
				})(i);
				linkArray.push(a[i1].handle(tmp));
			}
			links = tink_core__$Callback_CallbackLink_$Impl_$.fromMany(linkArray);
			if(sync) {
				if(links != null) {
					links.dissolve();
				}
			}
		},lazy);
	}
};
tink_core__$Promise_Promise_$Impl_$.inSequence = function(a) {
	var loop = null;
	loop = function(index) {
		if(index == a.length) {
			return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([]));
		} else {
			return tink_core__$Promise_Promise_$Impl_$.next(a[index],function(head) {
				return tink_core__$Promise_Promise_$Impl_$.next(loop(index + 1),function(tail) {
					return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success([head].concat(tail)));
				});
			});
		}
	};
	var loop1 = loop;
	return loop1(0);
};
tink_core__$Promise_Promise_$Impl_$.cache = function(gen) {
	var p = null;
	return function() {
		var ret = p;
		if(ret == null) {
			var sync = false;
			ret = tink_core__$Promise_Promise_$Impl_$.next(gen(),function(o) {
				o.b.handle(function(_) {
					sync = true;
					p = null;
				});
				return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(o.a));
			});
			if(!sync) {
				p = ret;
			}
		}
		var ret1 = ret.map(function(o1) {
			if(!tink_core_OutcomeTools.isSuccess(o1)) {
				p = null;
			}
			return o1;
		});
		return ret1.gather();
	};
};
tink_core__$Promise_Promise_$Impl_$.lift = function(p) {
	return p;
};
var tink_core__$Promise_Next_$Impl_$ = {};
tink_core__$Promise_Next_$Impl_$.__name__ = true;
tink_core__$Promise_Next_$Impl_$.ofSafe = function(f) {
	return function(x) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$.ofSync = function(f) {
	return function(x) {
		var ret = f(x).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Next_$Impl_$.ofSafeSync = function(f) {
	return function(x) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x)));
	};
};
tink_core__$Promise_Next_$Impl_$._chain = function(a,b) {
	return function(v) {
		return tink_core__$Promise_Promise_$Impl_$.next(a(v),b);
	};
};
var tink_core__$Promise_Recover_$Impl_$ = {};
tink_core__$Promise_Recover_$Impl_$.__name__ = true;
tink_core__$Promise_Recover_$Impl_$.ofSync = function(f) {
	return function(e) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(e)));
	};
};
var tink_core__$Promise_Combiner_$Impl_$ = {};
tink_core__$Promise_Combiner_$Impl_$.__name__ = true;
tink_core__$Promise_Combiner_$Impl_$.ofSafe = function(f) {
	return function(x1,x2) {
		return new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(f(x1,x2)));
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSync = function(f) {
	return function(x1,x2) {
		var ret = f(x1,x2).map(tink_core_Outcome.Success);
		return ret.gather();
	};
};
tink_core__$Promise_Combiner_$Impl_$.ofSafeSync = function(f) {
	return function(x1,x2) {
		return tink_core__$Promise_Promise_$Impl_$.ofOutcome(tink_core_Outcome.Success(f(x1,x2)));
	};
};
var tink_core__$Ref_Ref_$Impl_$ = {};
tink_core__$Ref_Ref_$Impl_$.__name__ = true;
tink_core__$Ref_Ref_$Impl_$._new = function() {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	return this1;
};
tink_core__$Ref_Ref_$Impl_$.get_value = function(this1) {
	return this1[0];
};
tink_core__$Ref_Ref_$Impl_$.set_value = function(this1,param) {
	return this1[0] = param;
};
tink_core__$Ref_Ref_$Impl_$.toString = function(this1) {
	return "@[" + Std.string(this1[0]) + "]";
};
tink_core__$Ref_Ref_$Impl_$.to = function(v) {
	var this1;
	var this2 = new Array(1);
	this1 = this2;
	var ret = this1;
	ret[0] = v;
	return ret;
};
var tink_core__$Signal_Signal_$Impl_$ = {};
tink_core__$Signal_Signal_$Impl_$.__name__ = true;
tink_core__$Signal_Signal_$Impl_$._new = function(f) {
	var this1 = new tink_core__$Signal_SimpleSignal(f);
	return this1;
};
tink_core__$Signal_Signal_$Impl_$.map = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var this3 = f(result);
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,this3);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.flatMap = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			f(result).handle(cb);
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.filter = function(this1,f,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			if(f(result)) {
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,result);
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.select = function(this1,selector,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return this1.handle(function(result) {
			var _g = selector(result);
			switch(_g[1]) {
			case 0:
				var v = _g[2];
				tink_core__$Callback_Callback_$Impl_$.invoke(cb,v);
				break;
			case 1:
				break;
			}
		});
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.join = function(this1,other,gather) {
	if(gather == null) {
		gather = true;
	}
	var this2 = new tink_core__$Signal_SimpleSignal(function(cb) {
		return new tink_core__$Callback_LinkPair(this1.handle(cb),other.handle(cb));
	});
	var ret = this2;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
tink_core__$Signal_Signal_$Impl_$.nextTime = function(this1,condition) {
	var ret = new tink_core_FutureTrigger();
	var link = null;
	var immediate = false;
	link = this1.handle(function(v) {
		if(condition == null || condition(v)) {
			ret.trigger(v);
			if(link == null) {
				immediate = true;
			} else if(link != null) {
				link.dissolve();
			}
		}
	});
	if(immediate) {
		if(link != null) {
			link.dissolve();
		}
	}
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.next = function(this1,condition) {
	return tink_core__$Signal_Signal_$Impl_$.nextTime(this1,condition);
};
tink_core__$Signal_Signal_$Impl_$.noise = function(this1) {
	return tink_core__$Signal_Signal_$Impl_$.map(this1,function(_) {
		return tink_core_Noise.Noise;
	});
};
tink_core__$Signal_Signal_$Impl_$.gather = function(this1) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	this1.handle(function(x) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(ret.handlers,x);
	});
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.generate = function(generator) {
	var ret = tink_core__$Signal_Signal_$Impl_$.trigger();
	generator($bind(ret,ret.trigger));
	return ret;
};
tink_core__$Signal_Signal_$Impl_$.trigger = function() {
	return new tink_core_SignalTrigger();
};
tink_core__$Signal_Signal_$Impl_$.ofClassical = function(add,remove,gather) {
	if(gather == null) {
		gather = true;
	}
	var this1 = new tink_core__$Signal_SimpleSignal(function(cb) {
		var f = function(a) {
			tink_core__$Callback_Callback_$Impl_$.invoke(cb,a);
		};
		add(f);
		var this2;
		var f1 = remove;
		var a1 = f;
		this2 = new tink_core__$Callback_SimpleLink(function() {
			f1(a1);
		});
		return this2;
	});
	var ret = this1;
	if(gather) {
		return tink_core__$Signal_Signal_$Impl_$.gather(ret);
	} else {
		return ret;
	}
};
var tink_core_SignalObject = function() { };
tink_core_SignalObject.__name__ = true;
tink_core_SignalObject.prototype = {
	__class__: tink_core_SignalObject
};
var tink_core__$Signal_SimpleSignal = function(f) {
	this.f = f;
};
tink_core__$Signal_SimpleSignal.__name__ = true;
tink_core__$Signal_SimpleSignal.__interfaces__ = [tink_core_SignalObject];
tink_core__$Signal_SimpleSignal.prototype = {
	handle: function(cb) {
		return this.f(cb);
	}
	,__class__: tink_core__$Signal_SimpleSignal
};
var tink_core_SignalTrigger = function() {
	var this1 = [];
	this.handlers = this1;
};
tink_core_SignalTrigger.__name__ = true;
tink_core_SignalTrigger.__interfaces__ = [tink_core_SignalObject];
tink_core_SignalTrigger.prototype = {
	trigger: function(event) {
		tink_core__$Callback_CallbackList_$Impl_$.invoke(this.handlers,event);
	}
	,getLength: function() {
		return this.handlers.length;
	}
	,handle: function(cb) {
		return tink_core__$Callback_CallbackList_$Impl_$.add(this.handlers,cb);
	}
	,clear: function() {
		tink_core__$Callback_CallbackList_$Impl_$.clear(this.handlers);
	}
	,asSignal: function() {
		return this;
	}
	,__class__: tink_core_SignalTrigger
};
var tink_parse_Char = function() { };
tink_parse_Char.__name__ = true;
var tink_parse__$Filter_Filter_$Impl_$ = {};
tink_parse__$Filter_Filter_$Impl_$.__name__ = true;
tink_parse__$Filter_Filter_$Impl_$.matches = function(this1,value) {
	if(this1 != null) {
		return this1(value);
	} else {
		return true;
	}
};
tink_parse__$Filter_Filter_$Impl_$.or = function(a,b) {
	return function(value) {
		if(!(a == null || a(value))) {
			if(b != null) {
				return b(value);
			} else {
				return true;
			}
		} else {
			return true;
		}
	};
};
tink_parse__$Filter_Filter_$Impl_$.orValue = function(a,b) {
	return function(value) {
		if(value != b) {
			if(a != null) {
				return a(value);
			} else {
				return true;
			}
		} else {
			return true;
		}
	};
};
tink_parse__$Filter_Filter_$Impl_$.ofConst = function(a) {
	return function(v) {
		return v == a;
	};
};
tink_parse__$Filter_Filter_$Impl_$.and = function(a,b) {
	return function(value) {
		if(a == null || a(value)) {
			if(b != null) {
				return b(value);
			} else {
				return true;
			}
		} else {
			return false;
		}
	};
};
tink_parse__$Filter_Filter_$Impl_$.not = function(a) {
	return function(value) {
		return !(a == null || a(value));
	};
};
tink_parse__$Filter_Filter_$Impl_$.all = function() {
	return null;
};
tink_parse__$Filter_Filter_$Impl_$.none = function() {
	return function(_) {
		return false;
	};
};
var tink_parse__$StringSlice_Data = function(string,start,end) {
	this.string = string;
	this.start = start;
	this.end = end;
	if((this.length = end - start) < 0) {
		this.length = 0;
		this.end = this.start;
	}
};
tink_parse__$StringSlice_Data.__name__ = true;
tink_parse__$StringSlice_Data.prototype = {
	toString: function() {
		if(this.representation == null) {
			this.representation = this.string.substring(this.start,this.end);
		}
		return this.representation;
	}
	,__class__: tink_parse__$StringSlice_Data
};
var tink_parse__$StringSlice_StringSlice_$Impl_$ = {};
tink_parse__$StringSlice_StringSlice_$Impl_$.__name__ = true;
tink_parse__$StringSlice_StringSlice_$Impl_$._new = function(string,start,end) {
	var this1 = new tink_parse__$StringSlice_Data(string,start == string.length ? start : start < 0 ? start % string.length + string.length : start % string.length,end == string.length ? end : end < 0 ? end % string.length + string.length : end % string.length);
	return this1;
};
tink_parse__$StringSlice_StringSlice_$Impl_$.after = function(this1,index) {
	return new tink_parse__$StringSlice_Data(this1.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,index) + this1.start,this1.end);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.before = function(this1,index) {
	return new tink_parse__$StringSlice_Data(this1.string,this1.start,this1.start + tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this1,index));
};
tink_parse__$StringSlice_StringSlice_$Impl_$.clamp = function(this1,index) {
	if(index < 0) {
		if(-index > this1.length) {
			return 0;
		} else {
			return index + this1.length;
		}
	} else if(index > this1.length) {
		return this1.length;
	} else {
		return index;
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.wrap = function(this1,index) {
	if(this1.length == 0) {
		return 0;
	} else if(index < 0) {
		return index % this1.length + this1.length;
	} else {
		return index % this1.length;
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.get = function(this1,index) {
	var index1 = tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,index);
	return this1.string.charCodeAt(index1 + this1.start);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.slice = function(this1,range) {
	return tink_parse__$StringSlice_StringSlice_$Impl_$._new(this1.string,tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,range.min) + this1.start,tink_parse__$StringSlice_StringSlice_$Impl_$.clamp(this1,range.max) + this1.start);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.fastGet = function(this1,index) {
	return this1.string.charCodeAt(index + this1.start);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.toString = function(this1) {
	return this1.toString();
};
tink_parse__$StringSlice_StringSlice_$Impl_$.ofString = function(s) {
	if(s == null || s == "") {
		return tink_parse__$StringSlice_StringSlice_$Impl_$.EMPTY;
	} else if(s.length == 1) {
		var _g = s.charCodeAt(0);
		var ascii = _g;
		if(ascii < tink_parse__$StringSlice_StringSlice_$Impl_$.CHARS.length) {
			return tink_parse__$StringSlice_StringSlice_$Impl_$.CHARS[ascii];
		} else {
			return new tink_parse__$StringSlice_Data(s,0,s.length);
		}
	} else {
		return new tink_parse__$StringSlice_Data(s,0,s.length);
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.startsWith = function(this1,other) {
	return tink_parse__$StringSlice_StringSlice_$Impl_$.hasSub(this1,other);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.hasSub = function(this1,other,at) {
	if(at == null) {
		at = 0;
	}
	at = tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,at);
	if(at + other.length > this1.length) {
		return false;
	}
	var a = this1;
	var b = other;
	return tink_parse__$StringSlice_StringSlice_$Impl_$.isEqual(a.string,a.start + at,other.length,b.string,b.start,b.length);
};
tink_parse__$StringSlice_StringSlice_$Impl_$.indexOf = function(this1,end,pos) {
	if(pos == null) {
		pos = 0;
	}
	pos = tink_parse__$StringSlice_StringSlice_$Impl_$.wrap(this1,pos);
	var _g = this1.string.indexOf(end.toString(),pos + this1.start);
	if(_g == -1) {
		return -1;
	} else {
		var v = _g;
		return v - this1.start;
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.isEqual = function(s1,p1,l1,s2,p2,l2) {
	if(l2 != l1) {
		return false;
	}
	var _g1 = 0;
	var _g = l2;
	while(_g1 < _g) {
		var i = _g1++;
		if(s1.charCodeAt(p1 + i) != s2.charCodeAt(p2 + i)) {
			return false;
		}
	}
	return true;
};
tink_parse__$StringSlice_StringSlice_$Impl_$.equalsString = function(slice,string) {
	if(string == null || string.length != slice.length) {
		return false;
	} else {
		return tink_parse__$StringSlice_StringSlice_$Impl_$.isEqual(slice.string,slice.start,slice.length,string,0,string.length);
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.equals = function(a,b) {
	if(a.length == b.length) {
		return tink_parse__$StringSlice_StringSlice_$Impl_$.hasSub(a,b);
	} else {
		return false;
	}
};
var todo_App = function() {
	React_Component.call(this);
	this.state = { };
};
todo_App.__name__ = true;
todo_App.main = function() {
	var app = window.document.createElement("div");
	window.document.body.appendChild(app);
	ReactDOM.render(React.createElement(todo_App),app);
};
todo_App.__super__ = React_Component;
todo_App.prototype = $extend(React_Component.prototype,{
	handleViewFinished: function(viewName) {
		this.showView(viewName);
	}
	,showView: function(viewName) {
		var _gthis = this;
		if(viewName == null) {
			System.import("!haxe-loader?null/todo_view_LoginView!").then(function(exports) {
				todo_view_LoginView = $s.todo_view_LoginView;
				var _ = todo_view_LoginView;
				return exports;
			}).then(function(_1) {
				_gthis.setState({ component : todo_view_LoginView});
			});
		} else if(viewName == "Login") {
			System.import("!haxe-loader?null/todo_view_TodoView!").then(function(exports1) {
				todo_view_TodoView = $s.todo_view_TodoView;
				var _2 = todo_view_TodoView;
				return exports1;
			}).then(function(_3) {
				_gthis.setState({ component : todo_view_TodoView});
			});
		} else {
			System.import("!haxe-loader?null/todo_view_LoginView!").then(function(exports2) {
				todo_view_LoginView = $s.todo_view_LoginView;
				var _4 = todo_view_LoginView;
				return exports2;
			}).then(function(_5) {
				_gthis.setState({ component : todo_view_LoginView});
			});
		}
	}
	,componentDidMount: function() {
		this.showView();
	}
	,render: function() {
		return { "$$typeof" : $$tre, type : "div", props : { className : "todoapp", children : [{ "$$typeof" : $$tre, type : "header", props : { children : { "$$typeof" : $$tre, type : "h1", props : { children : "Todo App"}, key : null, ref : null}}, key : null, ref : null},this.renderContent()]}, key : null, ref : null};
	}
	,renderContent: function() {
		if(this.state.component == null) {
			return { "$$typeof" : $$tre, type : "span", props : { children : "Loading..."}, key : null, ref : null};
		} else {
			return { "$$typeof" : $$tre, type : this.state.component, props : { handleViewFinished : $bind(this,this.handleViewFinished)}, key : null, ref : null};
		}
	}
	,__class__: todo_App
});
var todo_ConfigUtil = function() { };
todo_ConfigUtil.__name__ = true;
var todo_TodoAppSyncClient = function() {
	var poolData = { UserPoolId : "us-west-2_tz2GKGFiG", ClientId : "1ta01oqfb9bnng92va2vftiiue"};
	this.userPool = new AmazonCognitoIdentity_CognitoUserPool(poolData);
};
todo_TodoAppSyncClient.__name__ = true;
todo_TodoAppSyncClient.getInstance = function() {
	if(todo_TodoAppSyncClient.instance == null) {
		todo_TodoAppSyncClient.instance = new todo_TodoAppSyncClient();
	}
	return todo_TodoAppSyncClient.instance;
};
todo_TodoAppSyncClient.prototype = {
	login: function(username,password) {
		var _gthis = this;
		var details = new AmazonCognitoIdentity_AuthenticationDetails({ Username : username, Password : password});
		var userData = { Username : username, Pool : this.userPool};
		this.cognitoUser = new AmazonCognitoIdentity_CognitoUser(userData);
		var promise = new Promise(function(resolve,reject) {
			_gthis.cognitoUser.authenticateUser(details,{ onSuccess : function(result) {
				_gthis.client = new aws_appsync_AWSAppSyncClient({ url : "https://xhabcoo3j5bkjltmqe2k5pg2la.appsync-api.us-west-2.amazonaws.com/graphql", region : "us-west-2", auth : { type : "AMAZON_COGNITO_USER_POOLS", apiKey : "null", jwtToken : result.idToken.jwtToken}, disableOffline : true});
				resolve(result.idToken.jwtToken);
			}, onFailure : function(err) {
				reject(err);
			}});
		});
		return promise;
	}
	,createUser: function(username,password) {
		var _gthis = this;
		var promise = new Promise(function(resolve,reject) {
			_gthis.userPool.signUp(username,password,[],null,function(err,result) {
				if(err) {
					reject(err);
					return;
				}
				var cognitoUser = result.user;
				resolve(cognitoUser);
			});
		});
		return promise;
	}
	,confirmUser: function(username,code) {
		var userData = { Username : username, Pool : this.userPool};
		var cognitoUser = new AmazonCognitoIdentity_CognitoUser(userData);
		var promise = new Promise(function(resolve,reject) {
			cognitoUser.confirmRegistration(code,true,function(err,result) {
				if(err) {
					reject(err);
					return;
				}
				resolve(result);
			});
		});
		return promise;
	}
	,query: function(graphql) {
		return this.client.query({ query : apollo_gql_Tag.gql(graphql)});
	}
	,mutate: function(graphql) {
		return this.client.mutate({ mutation : apollo_gql_Tag.gql(graphql)});
	}
	,__class__: todo_TodoAppSyncClient
};
var todo_view_FormState = { __ename__ : true, __constructs__ : ["LoginForm","NewUserForm","ConfirmUserForm"] };
todo_view_FormState.LoginForm = ["LoginForm",0];
todo_view_FormState.LoginForm.__enum__ = todo_view_FormState;
todo_view_FormState.NewUserForm = ["NewUserForm",1];
todo_view_FormState.NewUserForm.__enum__ = todo_view_FormState;
todo_view_FormState.ConfirmUserForm = ["ConfirmUserForm",2];
todo_view_FormState.ConfirmUserForm.__enum__ = todo_view_FormState;
var todo_view_LoginView = function(props) {
	this.client = todo_TodoAppSyncClient.getInstance();
	React_Component.call(this,props);
	this.state = { showingForm : todo_view_FormState.LoginForm};
};
todo_view_LoginView.__name__ = true;
todo_view_LoginView.__super__ = React_Component;
todo_view_LoginView.prototype = $extend(React_Component.prototype,{
	createUser: function(event) {
		this.client.createUser(this.state.newUserEmail,this.state.newUserPassword).then(function(result) {
			console.log(result);
			return result;
		})["catch"](function(error) {
			console.log(error);
			return error;
		});
	}
	,handleLogin: function(event) {
		var _gthis = this;
		this.client.login(this.state.loginEmail,this.state.loginPassword).then(function(result) {
			console.log("access token: " + Std.string(result));
			_gthis.props.handleViewFinished("Login");
			return result;
		})["catch"](function(error) {
			console.log(error);
			return error;
		});
	}
	,confirmUser: function() {
		this.client.confirmUser(this.state.confirmEmail,this.state.code).then(function(result) {
			console.log(result);
			return result;
		})["catch"](function(error) {
			console.log(error);
			return error;
		});
	}
	,showLogin: function() {
		this.setState({ showingForm : todo_view_FormState.LoginForm});
	}
	,showNewUser: function() {
		this.setState({ showingForm : todo_view_FormState.NewUserForm});
	}
	,showConfirm: function() {
		this.setState({ showingForm : todo_view_FormState.ConfirmUserForm});
	}
	,componentDidMount: function() {
		this.handleChange(null);
	}
	,render: function() {
		var showingForm;
		var _g = this.state.showingForm;
		switch(_g[1]) {
		case 0:
			var showingForm1 = { "$$typeof" : $$tre, type : "h3", props : { children : "Login"}, key : null, ref : null};
			var showingForm2 = { "$$typeof" : $$tre, type : "div", props : { children : ["email: ",React.createElement("input",{ ref : "loginEmail", onChange : $bind(this,this.handleChange), defaultValue : "me@aaronspjut.com", type : "text"})]}, key : null, ref : null};
			var showingForm3 = { "$$typeof" : $$tre, type : "div", props : { children : ["password: ",React.createElement("input",{ ref : "loginPassword", onChange : $bind(this,this.handleChange), defaultValue : "passwordA1", type : "text"})]}, key : null, ref : null};
			showingForm = React.createElement("div",{ ref : "loginForm", className : "form"},showingForm1,showingForm2,showingForm3,{ "$$typeof" : $$tre, type : "button", props : { type : "button", onClick : $bind(this,this.handleLogin), children : "Login"}, key : null, ref : null});
			break;
		case 1:
			var showingForm4 = { "$$typeof" : $$tre, type : "h3", props : { children : "Create New Account"}, key : null, ref : null};
			var showingForm5 = { "$$typeof" : $$tre, type : "div", props : { children : ["email: ",React.createElement("input",{ ref : "newUserEmail", onChange : $bind(this,this.handleChange), type : "text"})]}, key : null, ref : null};
			var showingForm6 = { "$$typeof" : $$tre, type : "div", props : { children : ["password: ",React.createElement("input",{ ref : "newUserPassword", onChange : $bind(this,this.handleChange), type : "text"})]}, key : null, ref : null};
			showingForm = React.createElement("div",{ ref : "newUserForm", className : "form"},showingForm4,showingForm5,showingForm6,{ "$$typeof" : $$tre, type : "button", props : { type : "button", onClick : $bind(this,this.createUser), children : "Create"}, key : null, ref : null});
			break;
		case 2:
			var showingForm7 = { "$$typeof" : $$tre, type : "h3", props : { children : "Confirm Your New Account"}, key : null, ref : null};
			var showingForm8 = { "$$typeof" : $$tre, type : "span", props : { children : "if you created a new account you should recieve an email with a code to be entered here:"}, key : null, ref : null};
			var showingForm9 = { "$$typeof" : $$tre, type : "div", props : { children : ["email: ",React.createElement("input",{ ref : "confirmEmail", onChange : $bind(this,this.handleChange), type : "text"})]}, key : null, ref : null};
			var showingForm10 = { "$$typeof" : $$tre, type : "div", props : { children : ["code: ",React.createElement("input",{ ref : "codeInput", onChange : $bind(this,this.handleChange), type : "text"})]}, key : null, ref : null};
			var showingForm11 = $$tre;
			showingForm = React.createElement("div",{ ref : "confirmForm", className : "form"},showingForm7,showingForm8,showingForm9,showingForm10,{ $$typeof : showingForm11, type : "div", props : { children : { "$$typeof" : $$tre, type : "button", props : { type : "button", onClick : $bind(this,this.confirmUser), children : "Confirm"}, key : null, ref : null}}, key : null, ref : null});
			break;
		}
		return { "$$typeof" : $$tre, type : "div", props : { className : "loginView", children : [{ "$$typeof" : $$tre, type : "div", props : { className : "toolbar", children : [React.createElement("button",{ ref : "showLoginButton", type : "button", onClick : $bind(this,this.showLogin)},"Login")," | ",React.createElement("button",{ ref : "showNewUserButton", type : "button", onClick : $bind(this,this.showNewUser)},"New Account")," | ",React.createElement("button",{ ref : "showConfirmUserButton", type : "button", onClick : $bind(this,this.showConfirm)},"Confirm User")]}, key : null, ref : null},showingForm]}, key : null, ref : null};
	}
	,handleChange: function(event) {
		this.setState({ loginEmail : this.refs.loginEmail != null ? this.refs.loginEmail.value : "", loginPassword : this.refs.loginPassword != null ? this.refs.loginPassword.value : "", newUserEmail : this.refs.newUserEmail != null ? this.refs.newUserEmail.value : "", newUserPassword : this.refs.newUserPassword != null ? this.refs.newUserPassword.value : "", confirmEmail : this.refs.confirmEmail != null ? this.refs.confirmEmail.value : "", code : this.refs.codeInput != null ? this.refs.codeInput.value : ""});
	}
	,__class__: todo_view_LoginView
});
var todo_view_TodoView = function(props) {
	this.loading = true;
	this.client = todo_TodoAppSyncClient.getInstance();
	React_Component.call(this,props);
	this.getTodos();
	this.state = { todos : []};
};
todo_view_TodoView.__name__ = true;
todo_view_TodoView.__super__ = React_Component;
todo_view_TodoView.prototype = $extend(React_Component.prototype,{
	render: function() {
		if(this.loading) {
			return { "$$typeof" : $$tre, type : "h2", props : { children : "Loading..."}, key : null, ref : null};
		}
		var todos = this.state.todos.map(function(v) {
			var liBody = { "$$typeof" : $$tre, type : "div", props : { 'class' : "view", children : [{ "$$typeof" : $$tre, type : "input", props : { 'class' : "toggle", type : "checkbox"}, key : null, ref : null},{ "$$typeof" : $$tre, type : "label", props : { children : "stuff"}, key : null, ref : null},{ "$$typeof" : $$tre, type : "button", props : { 'class' : "destroy"}, key : null, ref : null}]}, key : null, ref : null};
			return React.createElement("li",{ key : v.id, className : "foo"},v.text);
		});
		return { "$$typeof" : $$tre, type : "div", props : { className : "todoView", children : [{ "$$typeof" : $$tre, type : "ul", props : { className : "todo-list", children : todos}, key : null, ref : null},{ "$$typeof" : $$tre, type : "div", props : { children : [" ",{ "$$typeof" : $$tre, type : "button", props : { type : "button", onClick : $bind(this,this.addTodo), children : "Add Todo"}, key : null, ref : null}]}, key : null, ref : null}]}, key : null, ref : null};
	}
	,getTodos: function() {
		var _gthis = this;
		var getTodosQuery = "{\n            todos{\n                id\n                text\n            }\n        }\n        ";
		this.client.query(getTodosQuery).then(function(result) {
			_gthis.loading = false;
			console.log(result);
			_gthis.setState({ todos : result.data.todos});
			return result;
		})["catch"](function(error) {
			console.log(error);
			return error;
		});
	}
	,addTodo: function() {
		var addTodoQuery = "mutation AddTodo {\n            addTodo(text: \"FirstFromWebApp\") {\n                id\n                text\n            }\n        }";
		this.client.mutate(addTodoQuery).then(function(result) {
			console.log(result);
			return result;
		})["catch"](function(error) {
			console.log(error);
			return error;
		});
	}
	,__class__: todo_view_TodoView
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
graphql_parser_GeneratedParser.ValidDirectiveLocations = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	if(__map_reserved["QUERY"] != null) {
		_g.setReserved("QUERY",true);
	} else {
		_g.h["QUERY"] = true;
	}
	if(__map_reserved["MUTATION"] != null) {
		_g.setReserved("MUTATION",true);
	} else {
		_g.h["MUTATION"] = true;
	}
	if(__map_reserved["SUBSCRIPTION"] != null) {
		_g.setReserved("SUBSCRIPTION",true);
	} else {
		_g.h["SUBSCRIPTION"] = true;
	}
	if(__map_reserved["FIELD"] != null) {
		_g.setReserved("FIELD",true);
	} else {
		_g.h["FIELD"] = true;
	}
	if(__map_reserved["FRAGMENT_DEFINITION"] != null) {
		_g.setReserved("FRAGMENT_DEFINITION",true);
	} else {
		_g.h["FRAGMENT_DEFINITION"] = true;
	}
	if(__map_reserved["FRAGMENT_SPREAD"] != null) {
		_g.setReserved("FRAGMENT_SPREAD",true);
	} else {
		_g.h["FRAGMENT_SPREAD"] = true;
	}
	if(__map_reserved["INLINE_FRAGMENT"] != null) {
		_g.setReserved("INLINE_FRAGMENT",true);
	} else {
		_g.h["INLINE_FRAGMENT"] = true;
	}
	if(__map_reserved["SCHEMA"] != null) {
		_g.setReserved("SCHEMA",true);
	} else {
		_g.h["SCHEMA"] = true;
	}
	if(__map_reserved["SCALAR"] != null) {
		_g.setReserved("SCALAR",true);
	} else {
		_g.h["SCALAR"] = true;
	}
	if(__map_reserved["OBJECT"] != null) {
		_g.setReserved("OBJECT",true);
	} else {
		_g.h["OBJECT"] = true;
	}
	if(__map_reserved["FIELD_DEFINITION"] != null) {
		_g.setReserved("FIELD_DEFINITION",true);
	} else {
		_g.h["FIELD_DEFINITION"] = true;
	}
	if(__map_reserved["ARGUMENT_DEFINITION"] != null) {
		_g.setReserved("ARGUMENT_DEFINITION",true);
	} else {
		_g.h["ARGUMENT_DEFINITION"] = true;
	}
	if(__map_reserved["INTERFACE"] != null) {
		_g.setReserved("INTERFACE",true);
	} else {
		_g.h["INTERFACE"] = true;
	}
	if(__map_reserved["UNION"] != null) {
		_g.setReserved("UNION",true);
	} else {
		_g.h["UNION"] = true;
	}
	if(__map_reserved["ENUM"] != null) {
		_g.setReserved("ENUM",true);
	} else {
		_g.h["ENUM"] = true;
	}
	if(__map_reserved["ENUM_VALUE"] != null) {
		_g.setReserved("ENUM_VALUE",true);
	} else {
		_g.h["ENUM_VALUE"] = true;
	}
	if(__map_reserved["INPUT_OBJECT"] != null) {
		_g.setReserved("INPUT_OBJECT",true);
	} else {
		_g.h["INPUT_OBJECT"] = true;
	}
	if(__map_reserved["INPUT_FIELD_DEFINITION"] != null) {
		_g.setReserved("INPUT_FIELD_DEFINITION",true);
	} else {
		_g.h["INPUT_FIELD_DEFINITION"] = true;
	}
	$r = _g;
	return $r;
}(this));
js_Boot.__toStr = ({ }).toString;
tink_core__$Callback_Callback_$Impl_$.depth = 0;
tink_core__$Callback_Callback_$Impl_$.MAX_DEPTH = 1000;
tink_core__$Future_NeverFuture.inst = new tink_core__$Future_NeverFuture();
tink_core__$Future_Future_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(null));
tink_core__$Future_Future_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Noise.Noise));
tink_core__$Future_Future_$Impl_$.NEVER = tink_core__$Future_NeverFuture.inst;
tink_core__$Promise_Promise_$Impl_$.NULL = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(null)));
tink_core__$Promise_Promise_$Impl_$.NOISE = new tink_core__$Future_SyncFuture(new tink_core__$Lazy_LazyConst(tink_core_Outcome.Success(tink_core_Noise.Noise)));
tink_core__$Promise_Promise_$Impl_$.NEVER = (function($this) {
	var $r;
	var ret = tink_core__$Future_Future_$Impl_$.NEVER.map(tink_core_Outcome.Success);
	$r = ret.gather();
	return $r;
}(this));
tink_parse_Char.WHITE = function(c) {
	return c < 33;
};
tink_parse_Char.LOWER = function(c) {
	if(c >= 97) {
		return c <= 122;
	} else {
		return false;
	}
};
tink_parse_Char.UPPER = function(c) {
	if(c >= 65) {
		return c <= 90;
	} else {
		return false;
	}
};
tink_parse_Char.DIGIT = function(c) {
	if(c >= 48) {
		return c <= 57;
	} else {
		return false;
	}
};
tink_parse__$StringSlice_StringSlice_$Impl_$.CHARS = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 0;
		while(_g1 < 128) {
			var i = _g1++;
			_g.push(new tink_parse__$StringSlice_Data(String.fromCharCode(i),0,1));
		}
	}
	$r = _g;
	return $r;
}(this));
tink_parse__$StringSlice_StringSlice_$Impl_$.EMPTY = new tink_parse__$StringSlice_Data("",0,0);
todo_App.STYLES = require("./src/todo/App.css");
todo_App.displayName = "App";
todo_TodoAppSyncClient.USER_POOL_ID = "us-west-2_tz2GKGFiG";
todo_TodoAppSyncClient.CLIENT_ID = "1ta01oqfb9bnng92va2vftiiue";
todo_TodoAppSyncClient.APP_SYNC_API_URL = "https://xhabcoo3j5bkjltmqe2k5pg2la.appsync-api.us-west-2.amazonaws.com/graphql";
todo_view_LoginView.STYLES = require("./src/todo/view/Login.css");
todo_view_LoginView.displayName = "LoginView";
todo_view_TodoView.displayName = "TodoView";
todo_App.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
